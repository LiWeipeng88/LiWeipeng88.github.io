<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李伟朋@博客</title>
  
  <subtitle>Today&#39;s pay, tomorrow&#39;s harvest</subtitle>
  <link href="https://liweipeng88.github.io/atom.xml" rel="self"/>
  
  <link href="https://liweipeng88.github.io/"/>
  <updated>2020-11-16T02:32:36.012Z</updated>
  <id>https://liweipeng88.github.io/</id>
  
  <author>
    <name>liweipeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue公共组件的封装</title>
    <link href="https://liweipeng88.github.io/2020/11/16/vue%E5%85%AC%E5%85%B1%E7%BB%84%E4%BB%B6%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>https://liweipeng88.github.io/2020/11/16/vue%E5%85%AC%E5%85%B1%E7%BB%84%E4%BB%B6%E7%9A%84%E5%B0%81%E8%A3%85/</id>
    <published>2020-11-15T16:00:00.000Z</published>
    <updated>2020-11-16T02:32:36.012Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一步：src下新建toast文件夹，创建index-js和toast-vue文件"><a href="#第一步：src下新建toast文件夹，创建index-js和toast-vue文件" class="headerlink" title="第一步：src下新建toast文件夹，创建index.js和toast.vue文件"></a>第一步：src下新建toast文件夹，创建index.js和toast.vue文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="keyword">import</span> Toasts <span class="keyword">from</span> <span class="string">'./Toast'</span></span><br><span class="line"><span class="keyword">const</span> Toast = &#123;</span><br><span class="line">  install: <span class="function"><span class="keyword">function</span> (<span class="params">Vue</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 创建一个Vue的“子类”组件</span></span><br><span class="line">    <span class="keyword">const</span> ToastConstructor = Vue.extend(Toasts)</span><br><span class="line">    <span class="comment">// 创建一个该子类的实例,并挂载到一个元素上</span></span><br><span class="line">    <span class="keyword">const</span> instance = <span class="keyword">new</span> ToastConstructor()</span><br><span class="line">    <span class="comment">// 将这个实例挂载到动态创建的元素上,并将元素添加到全局结构中</span></span><br><span class="line">    instance.$mount(<span class="built_in">document</span>.createElement(<span class="string">'div'</span>))</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(instance.$el)</span><br><span class="line">    <span class="comment">// 在Vue的原型链上注册方法，控制组件</span></span><br><span class="line">    Vue.prototype.$toast = <span class="function">(<span class="params">msg, duration = <span class="number">5000</span></span>) =&gt;</span> &#123;</span><br><span class="line">      instance.message = msg</span><br><span class="line">      instance.isShow = <span class="literal">true</span></span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        instance.isShow = <span class="literal">false</span></span><br><span class="line">      &#125;, duration)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Toast</span><br></pre></td></tr></table></figure><h3 id="第二步：toast的写入"><a href="#第二步：toast的写入" class="headerlink" title="第二步：toast的写入"></a>第二步：toast的写入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">//toast.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"fade"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"toast"</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-info"</span> <span class="attr">style</span>=<span class="string">"margin-right: 8px; color: #666666"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      &#123;&#123; message &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'Toast'</span>,</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">      message: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">      isShow: <span class="literal">false</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.toast</span> &#123;</span></span><br><span class="line">  padding: 5px 20px;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background</span><span class="selector-pseudo">:rgba(0</span>,0,0,<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line">  text-align: center;</span><br><span class="line">  position: fixed;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  height: 36px;</span><br><span class="line">  line-height: 36px;</span><br><span class="line">  top: 30%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="comment">/* vue动画过渡效果设置 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.fade-enter-active</span>,</span></span><br><span class="line"><span class="css"><span class="selector-class">.fade-leave-active</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">transition</span>: <span class="selector-tag">opacity</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.fade-enter</span>, <span class="selector-class">.fade-leave-to</span> &#123;</span></span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第三步：main-JS的配置"><a href="#第三步：main-JS的配置" class="headerlink" title="第三步：main.JS的配置"></a>第三步：main.JS的配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Toast <span class="keyword">from</span> <span class="string">"@/common/toast"</span></span><br><span class="line">Vue.use(Toast)</span><br></pre></td></tr></table></figure><h3 id="第四步：在使用的页面中"><a href="#第四步：在使用的页面中" class="headerlink" title="第四步：在使用的页面中"></a>第四步：在使用的页面中</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$toast(<span class="string">'当前企业暂未入驻铁铁工业品超市'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一步：src下新建toast文件夹，创建index-js和toast-vue文件&quot;&gt;&lt;a href=&quot;#第一步：src下新建toast文件夹，创建index-js和toast-vue文件&quot; class=&quot;headerlink&quot; title=&quot;第一步：src下新建</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/JS/"/>
    
    
    <category term="JS" scheme="https://liweipeng88.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中打印页面</title>
    <link href="https://liweipeng88.github.io/2020/08/13/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%89%93%E5%8D%B0%E9%A1%B5%E9%9D%A2/"/>
    <id>https://liweipeng88.github.io/2020/08/13/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%89%93%E5%8D%B0%E9%A1%B5%E9%9D%A2/</id>
    <published>2020-08-12T16:00:00.000Z</published>
    <updated>2020-08-17T04:23:29.700Z</updated>
    
    <content type="html"><![CDATA[<p>1.将要打印的视图源码包裹在section标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">ref</span>=<span class="string">"print"</span> <span class="attr">class</span>=<span class="string">"recordImg"</span> <span class="attr">id</span>=<span class="string">"printRecord"</span>&gt;</span><span class="tag">&lt;/<span class="name">setion</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.在utils文件中创建print.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 打印类属性、方法定义</span></span><br><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="keyword">const</span> Print = <span class="function"><span class="keyword">function</span> (<span class="params">dom, options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!(<span class="keyword">this</span> <span class="keyword">instanceof</span> Print)) <span class="keyword">return</span> <span class="keyword">new</span> Print(dom, options);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.options = <span class="keyword">this</span>.extend(&#123;</span><br><span class="line">    <span class="string">'noPrint'</span>: <span class="string">'.no-print'</span></span><br><span class="line">  &#125;, options);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ((<span class="keyword">typeof</span> dom) === <span class="string">"string"</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.dom = <span class="built_in">document</span>.querySelector(dom);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.isDOM(dom)</span><br><span class="line">    <span class="keyword">this</span>.dom = <span class="keyword">this</span>.isDOM(dom) ? dom : dom.$el;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.init();</span><br><span class="line">&#125;;</span><br><span class="line">Print.prototype = &#123;</span><br><span class="line">  init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> content = <span class="keyword">this</span>.getStyle() + <span class="keyword">this</span>.getHtml();</span><br><span class="line">    <span class="keyword">this</span>.writeIframe(content);</span><br><span class="line">  &#125;,</span><br><span class="line">  extend: <span class="function"><span class="keyword">function</span> (<span class="params">obj, obj2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> obj2) &#123;</span><br><span class="line">      obj[k] = obj2[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  getStyle: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">""</span>,</span><br><span class="line">      styles = <span class="built_in">document</span>.querySelectorAll(<span class="string">'style,link'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; styles.length; i++) &#123;</span><br><span class="line">      str += styles[i].outerHTML;</span><br><span class="line">    &#125;</span><br><span class="line">    str += <span class="string">"&lt;style&gt;"</span> + (<span class="keyword">this</span>.options.noPrint ? <span class="keyword">this</span>.options.noPrint : <span class="string">'.no-print'</span>) + <span class="string">"&#123;display:none;&#125;&lt;/style&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  getHtml: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> inputs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input'</span>);</span><br><span class="line">    <span class="keyword">var</span> textareas = <span class="built_in">document</span>.querySelectorAll(<span class="string">'textarea'</span>);</span><br><span class="line">    <span class="keyword">var</span> selects = <span class="built_in">document</span>.querySelectorAll(<span class="string">'select'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; inputs.length; k++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (inputs[k].type == <span class="string">"checkbox"</span> || inputs[k].type == <span class="string">"radio"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (inputs[k].checked == <span class="literal">true</span>) &#123;</span><br><span class="line">          inputs[k].setAttribute(<span class="string">'checked'</span>, <span class="string">"checked"</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          inputs[k].removeAttribute(<span class="string">'checked'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (inputs[k].type == <span class="string">"text"</span>) &#123;</span><br><span class="line">        inputs[k].setAttribute(<span class="string">'value'</span>, inputs[k].value)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        inputs[k].setAttribute(<span class="string">'value'</span>, inputs[k].value)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k2 = <span class="number">0</span>; k2 &lt; textareas.length; k2++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (textareas[k2].type == <span class="string">'textarea'</span>) &#123;</span><br><span class="line">        textareas[k2].innerHTML = textareas[k2].value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k3 = <span class="number">0</span>; k3 &lt; selects.length; k3++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (selects[k3].type == <span class="string">'select-one'</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> child = selects[k3].children;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> child) &#123;</span><br><span class="line">          <span class="keyword">if</span> (child[i].tagName == <span class="string">'OPTION'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (child[i].selected == <span class="literal">true</span>) &#123;</span><br><span class="line">              child[i].setAttribute(<span class="string">'selected'</span>, <span class="string">"selected"</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              child[i].removeAttribute(<span class="string">'selected'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.dom.outerHTML;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  writeIframe: <span class="function"><span class="keyword">function</span> (<span class="params">content</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> w, doc, iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>),</span><br><span class="line">      f = <span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">    iframe.id = <span class="string">"myIframe"</span>;</span><br><span class="line">    <span class="comment">//iframe.style = "position:absolute;width:0;height:0;top:-10px;left:-10px;";</span></span><br><span class="line">    iframe.setAttribute(<span class="string">'style'</span>, <span class="string">'position:absolute;width:0;height:0;top:-10px;left:-10px;'</span>);</span><br><span class="line">    w = f.contentWindow || f.contentDocument;</span><br><span class="line">    doc = f.contentDocument || f.contentWindow.document;</span><br><span class="line">    doc.open();</span><br><span class="line">    doc.write(content);</span><br><span class="line">    doc.close();</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span></span><br><span class="line">    iframe.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      _this.toPrint(w);</span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.body.removeChild(iframe)</span><br><span class="line">      &#125;, <span class="number">100</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  toPrint: <span class="function"><span class="keyword">function</span> (<span class="params">frameWindow</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        frameWindow.focus();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (!frameWindow.document.execCommand(<span class="string">'print'</span>, <span class="literal">false</span>, <span class="literal">null</span>)) &#123;</span><br><span class="line">            frameWindow.print();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          frameWindow.print();</span><br><span class="line">        &#125;</span><br><span class="line">        frameWindow.close();</span><br><span class="line">      &#125;, <span class="number">10</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'err'</span>, err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  isDOM: (<span class="keyword">typeof</span> HTMLElement === <span class="string">'object'</span>) ?</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> obj <span class="keyword">instanceof</span> HTMLElement;</span><br><span class="line">    &#125; :</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> obj &amp;&amp; <span class="keyword">typeof</span> obj === <span class="string">'object'</span> &amp;&amp; obj.nodeType === <span class="number">1</span> &amp;&amp; <span class="keyword">typeof</span> obj.nodeName === <span class="string">'string'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> MyPlugin = &#123;&#125;</span><br><span class="line">MyPlugin.install = <span class="function"><span class="keyword">function</span> (<span class="params">Vue, options</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 4. 添加实例方法</span></span><br><span class="line">  Vue.prototype.$print = Print</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> MyPlugin</span><br></pre></td></tr></table></figure><p>3.将MyPlugin方法挂在到Vue原型上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> print <span class="keyword">from</span> <span class="string">'../utils/print'</span></span><br><span class="line">Vue.use(print)</span><br></pre></td></tr></table></figure><p>4.定义事件方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PrintRow(index, row) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$print(<span class="keyword">this</span>.$refs.print) <span class="comment">// 使用</span></span><br><span class="line">      &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.将要打印的视图源码包裹在section标签中&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Vue/"/>
    
    
    <category term="VUE" scheme="https://liweipeng88.github.io/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>Echarts 中文 API说明文档</title>
    <link href="https://liweipeng88.github.io/2020/07/29/Echarts%20%E4%B8%AD%E6%96%87%20API%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/"/>
    <id>https://liweipeng88.github.io/2020/07/29/Echarts%20%E4%B8%AD%E6%96%87%20API%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/</id>
    <published>2020-07-28T16:00:00.000Z</published>
    <updated>2020-08-07T09:36:04.371Z</updated>
    
    <content type="html"><![CDATA[<p>[官网链接](<a href="http://echarts.baidu.com/echarts2/doc/example/themeDesigner.html" target="_blank" rel="noopener">http://echarts.baidu.com/echarts2/doc/example/themeDesigner.html</a><br><a href="https://www.echartsjs.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts" target="_blank" rel="noopener">https://www.echartsjs.com/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts</a>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br></pre></td><td class="code"><pre><span class="line">theme = &#123;</span><br><span class="line">    <span class="comment">// 全图默认背景</span></span><br><span class="line">    <span class="comment">// backgroundColor: 'rgba(0,0,0,0)',</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 默认色板</span></span><br><span class="line">    color: [<span class="string">'#ff7f50'</span>,<span class="string">'#87cefa'</span>,<span class="string">'#da70d6'</span>,<span class="string">'#32cd32'</span>,<span class="string">'#6495ed'</span>,</span><br><span class="line">            <span class="string">'#ff69b4'</span>,<span class="string">'#ba55d3'</span>,<span class="string">'#cd5c5c'</span>,<span class="string">'#ffa500'</span>,<span class="string">'#40e0d0'</span>,</span><br><span class="line">            <span class="string">'#1e90ff'</span>,<span class="string">'#ff6347'</span>,<span class="string">'#7b68ee'</span>,<span class="string">'#00fa9a'</span>,<span class="string">'#ffd700'</span>,</span><br><span class="line">            <span class="string">'#6699FF'</span>,<span class="string">'#ff6666'</span>,<span class="string">'#3cb371'</span>,<span class="string">'#b8860b'</span>,<span class="string">'#30e0e0'</span>],</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 图表标题</span></span><br><span class="line">    title: &#123;</span><br><span class="line">        x: <span class="string">'left'</span>,                 <span class="comment">// 水平安放位置，默认为左对齐，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: <span class="string">'top'</span>,                  <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        <span class="comment">//textAlign: null          // 水平对齐方式，默认根据x设置自动调整</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">        borderColor: <span class="string">'#ccc'</span>,       <span class="comment">// 标题边框颜色</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 标题边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 标题内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: <span class="number">10</span>,               <span class="comment">// 主副标题纵向间隔，单位px，默认为10，</span></span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            fontSize: <span class="number">18</span>,</span><br><span class="line">            fontWeight: <span class="string">'bolder'</span>,</span><br><span class="line">            color: <span class="string">'#333'</span>          <span class="comment">// 主标题文字颜色</span></span><br><span class="line">        &#125;,</span><br><span class="line">        subtextStyle: &#123;</span><br><span class="line">            color: <span class="string">'#aaa'</span>          <span class="comment">// 副标题文字颜色</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 图例</span></span><br><span class="line">    legend: &#123;</span><br><span class="line">        orient: <span class="string">'horizontal'</span>,      <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        x: <span class="string">'center'</span>,               <span class="comment">// 水平安放位置，默认为全图居中，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: <span class="string">'top'</span>,                  <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">        borderColor: <span class="string">'#ccc'</span>,       <span class="comment">// 图例边框颜色</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 图例边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 图例内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: <span class="number">10</span>,               <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                                   <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">        itemWidth: <span class="number">20</span>,             <span class="comment">// 图例图形宽度</span></span><br><span class="line">        itemHeight: <span class="number">14</span>,            <span class="comment">// 图例图形高度</span></span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: <span class="string">'#333'</span>          <span class="comment">// 图例文字颜色</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 值域</span></span><br><span class="line">    dataRange: &#123;</span><br><span class="line">        orient: <span class="string">'vertical'</span>,        <span class="comment">// 布局方式，默认为垂直布局，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        x: <span class="string">'left'</span>,                 <span class="comment">// 水平安放位置，默认为全图左对齐，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: <span class="string">'bottom'</span>,               <span class="comment">// 垂直安放位置，默认为全图底部，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">        borderColor: <span class="string">'#ccc'</span>,       <span class="comment">// 值域边框颜色</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 值域边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 值域内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: <span class="number">10</span>,               <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                                   <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">        itemWidth: <span class="number">20</span>,             <span class="comment">// 值域图形宽度，线性渐变水平布局宽度为该值 * 10</span></span><br><span class="line">        itemHeight: <span class="number">14</span>,            <span class="comment">// 值域图形高度，线性渐变垂直布局高度为该值 * 10</span></span><br><span class="line">        splitNumber: <span class="number">5</span>,            <span class="comment">// 分割段数，默认为5，为0时为线性渐变</span></span><br><span class="line">        color:[<span class="string">'#1e90ff'</span>,<span class="string">'#f0ffff'</span>],<span class="comment">//颜色 </span></span><br><span class="line">        <span class="comment">//text:['高','低'],         // 文本，默认为数值文本</span></span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: <span class="string">'#333'</span>          <span class="comment">// 值域文字颜色</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    toolbox: &#123;</span><br><span class="line">        orient: <span class="string">'horizontal'</span>,      <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        x: <span class="string">'right'</span>,                <span class="comment">// 水平安放位置，默认为全图右对齐，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: <span class="string">'top'</span>,                  <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        color : [<span class="string">'#1e90ff'</span>,<span class="string">'#22bb22'</span>,<span class="string">'#4b0082'</span>,<span class="string">'#d2691e'</span>],</span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>, <span class="comment">// 工具箱背景颜色</span></span><br><span class="line">        borderColor: <span class="string">'#ccc'</span>,       <span class="comment">// 工具箱边框颜色</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 工具箱边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 工具箱内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: <span class="number">10</span>,               <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                                   <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">        itemSize: <span class="number">16</span>,              <span class="comment">// 工具箱图形宽度</span></span><br><span class="line">        featureImageIcon : &#123;&#125;,     <span class="comment">// 自定义图片icon</span></span><br><span class="line">        featureTitle : &#123;</span><br><span class="line">            mark : <span class="string">'辅助线开关'</span>,</span><br><span class="line">            markUndo : <span class="string">'删除辅助线'</span>,</span><br><span class="line">            markClear : <span class="string">'清空辅助线'</span>,</span><br><span class="line">            dataZoom : <span class="string">'区域缩放'</span>,</span><br><span class="line">            dataZoomReset : <span class="string">'区域缩放后退'</span>,</span><br><span class="line">            dataView : <span class="string">'数据视图'</span>,</span><br><span class="line">            lineChart : <span class="string">'折线图切换'</span>,</span><br><span class="line">            barChart : <span class="string">'柱形图切换'</span>,</span><br><span class="line">            restore : <span class="string">'还原'</span>,</span><br><span class="line">            saveAsImage : <span class="string">'保存为图片'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 提示框</span></span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,           <span class="comment">// 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'</span></span><br><span class="line">        showDelay: <span class="number">20</span>,             <span class="comment">// 显示延迟，添加显示延迟可以避免频繁切换，单位ms</span></span><br><span class="line">        hideDelay: <span class="number">100</span>,            <span class="comment">// 隐藏延迟，单位ms</span></span><br><span class="line">        transitionDuration : <span class="number">0.4</span>,  <span class="comment">// 动画变换时间，单位s</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0.7)'</span>,     <span class="comment">// 提示背景颜色，默认为透明度为0.7的黑色</span></span><br><span class="line">        borderColor: <span class="string">'#333'</span>,       <span class="comment">// 提示边框颜色</span></span><br><span class="line">        borderRadius: <span class="number">4</span>,           <span class="comment">// 提示边框圆角，单位px，默认为4</span></span><br><span class="line">        borderWidth: <span class="number">0</span>,            <span class="comment">// 提示边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">        padding: <span class="number">5</span>,                <span class="comment">// 提示内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        axisPointer : &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">            type : <span class="string">'line'</span>,         <span class="comment">// 默认为直线，可选为：'line' | 'shadow'</span></span><br><span class="line">            lineStyle : &#123;          <span class="comment">// 直线指示器样式设置</span></span><br><span class="line">                color: <span class="string">'#48b'</span>,</span><br><span class="line">                width: <span class="number">2</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            shadowStyle : &#123;                       <span class="comment">// 阴影指示器样式设置</span></span><br><span class="line">                width: <span class="string">'auto'</span>,                   <span class="comment">// 阴影大小</span></span><br><span class="line">                color: <span class="string">'rgba(150,150,150,0.3)'</span>  <span class="comment">// 阴影颜色</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: <span class="string">'#fff'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 区域缩放控制器</span></span><br><span class="line">    dataZoom: &#123;</span><br><span class="line">        orient: <span class="string">'horizontal'</span>,      <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        <span class="comment">// x: &#123;number&#125;,            // 水平安放位置，默认为根据grid参数适配，可选为：</span></span><br><span class="line">                                   <span class="comment">// &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        <span class="comment">// y: &#123;number&#125;,            // 垂直安放位置，默认为根据grid参数适配，可选为：</span></span><br><span class="line">                                   <span class="comment">// &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        <span class="comment">// width: &#123;number&#125;,        // 指定宽度，横向布局时默认为根据grid参数适配</span></span><br><span class="line">        <span class="comment">// height: &#123;number&#125;,       // 指定高度，纵向布局时默认为根据grid参数适配</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,       <span class="comment">// 背景颜色</span></span><br><span class="line">        dataBackgroundColor: <span class="string">'#eee'</span>,            <span class="comment">// 数据背景颜色</span></span><br><span class="line">        fillerColor: <span class="string">'rgba(144,197,237,0.2)'</span>,   <span class="comment">// 填充颜色</span></span><br><span class="line">        handleColor: <span class="string">'rgba(70,130,180,0.8)'</span>     <span class="comment">// 手柄颜色</span></span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 网格</span></span><br><span class="line">    grid: &#123;</span><br><span class="line">        x: <span class="number">80</span>,</span><br><span class="line">        y: <span class="number">60</span>,</span><br><span class="line">        x2: <span class="number">80</span>,</span><br><span class="line">        y2: <span class="number">60</span>,</span><br><span class="line">        <span class="comment">// width: &#123;totalWidth&#125; - x - x2,</span></span><br><span class="line">        <span class="comment">// height: &#123;totalHeight&#125; - y - y2,</span></span><br><span class="line">        backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">        borderWidth: <span class="number">1</span>,</span><br><span class="line">        borderColor: <span class="string">'#ccc'</span></span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 类目轴</span></span><br><span class="line">    categoryAxis: &#123;</span><br><span class="line">        position: <span class="string">'bottom'</span>,    <span class="comment">// 位置</span></span><br><span class="line">        nameLocation: <span class="string">'end'</span>,   <span class="comment">// 坐标轴名字位置，支持'start' | 'end'</span></span><br><span class="line">        boundaryGap: <span class="literal">true</span>,     <span class="comment">// 类目起始和结束两端空白策略</span></span><br><span class="line">        axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">            show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                color: <span class="string">'#48b'</span>,</span><br><span class="line">                width: <span class="number">2</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisTick: &#123;            <span class="comment">// 坐标轴小标记</span></span><br><span class="line">            show: <span class="literal">true</span>,       <span class="comment">// 属性show控制显示与否，默认不显示</span></span><br><span class="line">            interval: <span class="string">'auto'</span>,</span><br><span class="line">            <span class="comment">// onGap: null,</span></span><br><span class="line">            inside : <span class="literal">false</span>,    <span class="comment">// 控制小标记是否在grid里 </span></span><br><span class="line">            length :<span class="number">5</span>,         <span class="comment">// 属性length控制线长</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                color: <span class="string">'#333'</span>,</span><br><span class="line">                width: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">            show: <span class="literal">true</span>,</span><br><span class="line">            interval: <span class="string">'auto'</span>,</span><br><span class="line">            rotate: <span class="number">0</span>,</span><br><span class="line">            margin: <span class="number">8</span>,</span><br><span class="line">            <span class="comment">// formatter: null,</span></span><br><span class="line">            textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                color: <span class="string">'#333'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitLine: &#123;           <span class="comment">// 分隔线</span></span><br><span class="line">            show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">            <span class="comment">// onGap: null,</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle（详见lineStyle）控制线条样式</span></span><br><span class="line">                color: [<span class="string">'#ccc'</span>],</span><br><span class="line">                width: <span class="number">1</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitArea: &#123;           <span class="comment">// 分隔区域</span></span><br><span class="line">            show: <span class="literal">false</span>,       <span class="comment">// 默认不显示，属性show控制显示与否</span></span><br><span class="line">            <span class="comment">// onGap: null,</span></span><br><span class="line">            areaStyle: &#123;       <span class="comment">// 属性areaStyle（详见areaStyle）控制区域样式</span></span><br><span class="line">                color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 数值型坐标轴默认参数</span></span><br><span class="line">    valueAxis: &#123;</span><br><span class="line">        position: <span class="string">'left'</span>,      <span class="comment">// 位置</span></span><br><span class="line">        nameLocation: <span class="string">'end'</span>,   <span class="comment">// 坐标轴名字位置，支持'start' | 'end'</span></span><br><span class="line">        nameTextStyle: &#123;&#125;,     <span class="comment">// 坐标轴文字样式，默认取全局样式</span></span><br><span class="line">        boundaryGap: [<span class="number">0</span>, <span class="number">0</span>],   <span class="comment">// 数值起始和结束两端空白策略</span></span><br><span class="line">        splitNumber: <span class="number">5</span>,        <span class="comment">// 分割段数，默认为5</span></span><br><span class="line">        axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">            show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                color: <span class="string">'#48b'</span>,</span><br><span class="line">                width: <span class="number">2</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisTick: &#123;            <span class="comment">// 坐标轴小标记</span></span><br><span class="line">            show: <span class="literal">false</span>,       <span class="comment">// 属性show控制显示与否，默认不显示</span></span><br><span class="line">            inside : <span class="literal">false</span>,    <span class="comment">// 控制小标记是否在grid里 </span></span><br><span class="line">            length :<span class="number">5</span>,         <span class="comment">// 属性length控制线长</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                color: <span class="string">'#333'</span>,</span><br><span class="line">                width: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">            show: <span class="literal">true</span>,</span><br><span class="line">            rotate: <span class="number">0</span>,</span><br><span class="line">            margin: <span class="number">8</span>,</span><br><span class="line">            <span class="comment">// formatter: null,</span></span><br><span class="line">            textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                color: <span class="string">'#333'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitLine: &#123;           <span class="comment">// 分隔线</span></span><br><span class="line">            show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle（详见lineStyle）控制线条样式</span></span><br><span class="line">                color: [<span class="string">'#ccc'</span>],</span><br><span class="line">                width: <span class="number">1</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitArea: &#123;           <span class="comment">// 分隔区域</span></span><br><span class="line">            show: <span class="literal">false</span>,       <span class="comment">// 默认不显示，属性show控制显示与否</span></span><br><span class="line">            areaStyle: &#123;       <span class="comment">// 属性areaStyle（详见areaStyle）控制区域样式</span></span><br><span class="line">                color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    polar : &#123;</span><br><span class="line">        center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],    <span class="comment">// 默认全局居中</span></span><br><span class="line">        radius : <span class="string">'75%'</span>,</span><br><span class="line">        startAngle : <span class="number">90</span>,</span><br><span class="line">        splitNumber : <span class="number">5</span>,</span><br><span class="line">        name : &#123;</span><br><span class="line">            show: <span class="literal">true</span>,</span><br><span class="line">            textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                color: <span class="string">'#333'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">            show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">            lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">                color: <span class="string">'#ccc'</span>,</span><br><span class="line">                width: <span class="number">1</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">            show: <span class="literal">false</span>,</span><br><span class="line">            textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                color: <span class="string">'#333'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitArea : &#123;</span><br><span class="line">            show : <span class="literal">true</span>,</span><br><span class="line">            areaStyle : &#123;</span><br><span class="line">                color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitLine : &#123;</span><br><span class="line">            show : <span class="literal">true</span>,</span><br><span class="line">            lineStyle : &#123;</span><br><span class="line">                width : <span class="number">1</span>,</span><br><span class="line">                color : <span class="string">'#ccc'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 柱形图默认参数</span></span><br><span class="line">    bar: &#123;</span><br><span class="line">        barMinHeight: <span class="number">0</span>,          <span class="comment">// 最小高度改为0</span></span><br><span class="line">        <span class="comment">// barWidth: null,        // 默认自适应</span></span><br><span class="line">        barGap: <span class="string">'30%'</span>,            <span class="comment">// 柱间距离，默认为柱形宽度的30%，可设固定值</span></span><br><span class="line">        barCategoryGap : <span class="string">'20%'</span>,   <span class="comment">// 类目间柱形距离，默认为类目间距的20%，可设固定值</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: '各异',</span></span><br><span class="line">                barBorderColor: <span class="string">'#fff'</span>,       <span class="comment">// 柱条边线</span></span><br><span class="line">                barBorderRadius: <span class="number">0</span>,           <span class="comment">// 柱条边线圆角，单位px，默认为0</span></span><br><span class="line">                barBorderWidth: <span class="number">1</span>,            <span class="comment">// 柱条边线线宽，单位px，默认为1</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: '各异',</span></span><br><span class="line">                barBorderColor: <span class="string">'rgba(0,0,0,0)'</span>,   <span class="comment">// 柱条边线</span></span><br><span class="line">                barBorderRadius: <span class="number">0</span>,                <span class="comment">// 柱条边线圆角，单位px，默认为0</span></span><br><span class="line">                barBorderWidth: <span class="number">1</span>,                 <span class="comment">// 柱条边线线宽，单位px，默认为1</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 折线图默认参数</span></span><br><span class="line">    line: &#123;</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: <span class="number">2</span>,</span><br><span class="line">                    type: <span class="string">'solid'</span>,</span><br><span class="line">                    shadowColor : <span class="string">'rgba(0,0,0,0)'</span>, <span class="comment">//默认透明</span></span><br><span class="line">                    shadowBlur: <span class="number">5</span>,</span><br><span class="line">                    shadowOffsetX: <span class="number">3</span>,</span><br><span class="line">                    shadowOffsetY: <span class="number">3</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//smooth : false,</span></span><br><span class="line">        <span class="comment">//symbol: null,         // 拐点图形类型</span></span><br><span class="line">        symbolSize: <span class="number">2</span>,          <span class="comment">// 拐点图形大小</span></span><br><span class="line">        <span class="comment">//symbolRotate : null,  // 拐点图形旋转控制</span></span><br><span class="line">        showAllSymbol: <span class="literal">false</span>    <span class="comment">// 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// K线图默认参数</span></span><br><span class="line">    k: &#123;</span><br><span class="line">        <span class="comment">// barWidth : null          // 默认自适应</span></span><br><span class="line">        <span class="comment">// barMaxWidth : null       // 默认自适应 </span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                color: <span class="string">'#fff'</span>,          <span class="comment">// 阳线填充颜色</span></span><br><span class="line">                color0: <span class="string">'#00aa11'</span>,      <span class="comment">// 阴线填充颜色</span></span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: <span class="number">1</span>,</span><br><span class="line">                    color: <span class="string">'#ff3200'</span>,   <span class="comment">// 阳线边框颜色</span></span><br><span class="line">                    color0: <span class="string">'#00aa11'</span>   <span class="comment">// 阴线边框颜色</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                <span class="comment">// color0: 各异</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 散点图默认参数</span></span><br><span class="line">    scatter: &#123;</span><br><span class="line">        <span class="comment">//symbol: null,      // 图形类型</span></span><br><span class="line">        symbolSize: <span class="number">4</span>,       <span class="comment">// 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">        <span class="comment">//symbolRotate : null,  // 图形旋转控制</span></span><br><span class="line">        large: <span class="literal">false</span>,        <span class="comment">// 大规模散点图</span></span><br><span class="line">        largeThreshold: <span class="number">2000</span>,<span class="comment">// 大规模阀值，large为true且数据量&gt;largeThreshold才启用大规模模式</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: '各异'</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 雷达图默认参数</span></span><br><span class="line">    radar : &#123;</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: <span class="number">2</span>,</span><br><span class="line">                    type: <span class="string">'solid'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//symbol: null,         // 拐点图形类型</span></span><br><span class="line">        symbolSize: <span class="number">2</span>           <span class="comment">// 可计算特性参数，空数据拖拽提示图形大小</span></span><br><span class="line">        <span class="comment">//symbolRotate : null,  // 图形旋转控制</span></span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 饼图默认参数</span></span><br><span class="line">    pie: &#123;</span><br><span class="line">        center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],    <span class="comment">// 默认全局居中</span></span><br><span class="line">        radius : [<span class="number">0</span>, <span class="string">'75%'</span>],</span><br><span class="line">        clockWise : <span class="literal">false</span>,          <span class="comment">// 默认逆时针</span></span><br><span class="line">        startAngle: <span class="number">90</span>,</span><br><span class="line">        minAngle: <span class="number">0</span>,                <span class="comment">// 最小角度改为0</span></span><br><span class="line">        selectedOffset: <span class="number">10</span>,         <span class="comment">// 选中是扇区偏移量</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: <span class="string">'#fff'</span>,</span><br><span class="line">                borderWidth: <span class="number">1</span>,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">true</span>,</span><br><span class="line">                    position: <span class="string">'outer'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                labelLine: &#123;</span><br><span class="line">                    show: <span class="literal">true</span>,</span><br><span class="line">                    length: <span class="number">20</span>,</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        <span class="comment">// color: 各异,</span></span><br><span class="line">                        width: <span class="number">1</span>,</span><br><span class="line">                        type: <span class="string">'solid'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">                borderWidth: <span class="number">1</span>,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 'outer'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                labelLine: &#123;</span><br><span class="line">                    show: <span class="literal">false</span>,</span><br><span class="line">                    length: <span class="number">20</span>,</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        <span class="comment">// color: 各异,</span></span><br><span class="line">                        width: <span class="number">1</span>,</span><br><span class="line">                        type: <span class="string">'solid'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    map: &#123;</span><br><span class="line">        mapType: <span class="string">'china'</span>,   <span class="comment">// 各省的mapType暂时都用中文</span></span><br><span class="line">        mapLocation: &#123;</span><br><span class="line">            x : <span class="string">'center'</span>,</span><br><span class="line">            y : <span class="string">'center'</span></span><br><span class="line">            <span class="comment">// width    // 自适应</span></span><br><span class="line">            <span class="comment">// height   // 自适应</span></span><br><span class="line">        &#125;,</span><br><span class="line">        showLegendSymbol : <span class="literal">true</span>,       <span class="comment">// 显示图例颜色标识（系列标识的小圆点），存在legend时生效</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: <span class="string">'#fff'</span>,</span><br><span class="line">                borderWidth: <span class="number">1</span>,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                    color: <span class="string">'#ccc'</span><span class="comment">//rgba(135,206,250,0.8)</span></span><br><span class="line">                &#125;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span>,</span><br><span class="line">                    textStyle: &#123;</span><br><span class="line">                        color: <span class="string">'rgba(139,69,19,1)'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;                 <span class="comment">// 也是选中样式</span></span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">                borderWidth: <span class="number">1</span>,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                    color: <span class="string">'rgba(255,215,0,0.8)'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span>,</span><br><span class="line">                    textStyle: &#123;</span><br><span class="line">                        color: <span class="string">'rgba(139,69,19,1)'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    force : &#123;</span><br><span class="line">        <span class="comment">// 数据map到圆的半径的最小值和最大值</span></span><br><span class="line">        minRadius : <span class="number">10</span>,</span><br><span class="line">        maxRadius : <span class="number">20</span>,</span><br><span class="line">        density : <span class="number">1.0</span>,</span><br><span class="line">        attractiveness : <span class="number">1.0</span>,</span><br><span class="line">        <span class="comment">// 初始化的随机大小位置</span></span><br><span class="line">        initSize : <span class="number">300</span>,</span><br><span class="line">        <span class="comment">// 向心力因子，越大向心力越大</span></span><br><span class="line">        centripetal : <span class="number">1</span>,</span><br><span class="line">        <span class="comment">// 冷却因子</span></span><br><span class="line">        coolDown : <span class="number">0.99</span>,</span><br><span class="line">        <span class="comment">// 分类里如果有样式会覆盖节点默认样式</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                nodeStyle : &#123;</span><br><span class="line">                    brushType : <span class="string">'both'</span>,</span><br><span class="line">                    color : <span class="string">'#f08c2e'</span>,</span><br><span class="line">                    strokeColor : <span class="string">'#5182ab'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                linkStyle : &#123;</span><br><span class="line">                    strokeColor : <span class="string">'#5182ab'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                nodeStyle : &#123;&#125;,</span><br><span class="line">                linkStyle : &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    chord : &#123;</span><br><span class="line">        radius : [<span class="string">'65%'</span>, <span class="string">'75%'</span>],</span><br><span class="line">        center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],</span><br><span class="line">        padding : <span class="number">2</span>,</span><br><span class="line">        sort : <span class="string">'none'</span>, <span class="comment">// can be 'none', 'ascending', 'descending'</span></span><br><span class="line">        sortSub : <span class="string">'none'</span>, <span class="comment">// can be 'none', 'ascending', 'descending'</span></span><br><span class="line">        startAngle : <span class="number">90</span>,</span><br><span class="line">        clockWise : <span class="literal">false</span>,</span><br><span class="line">        showScale : <span class="literal">false</span>,</span><br><span class="line">        showScaleText : <span class="literal">false</span>,</span><br><span class="line">        itemStyle : &#123;</span><br><span class="line">            normal : &#123;</span><br><span class="line">                label : &#123;</span><br><span class="line">                    show : <span class="literal">true</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle : &#123;</span><br><span class="line">                    width : <span class="number">0</span>,</span><br><span class="line">                    color : <span class="string">'#000'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                chordStyle : &#123;</span><br><span class="line">                    lineStyle : &#123;</span><br><span class="line">                        width : <span class="number">1</span>,</span><br><span class="line">                        color : <span class="string">'#666'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis : &#123;</span><br><span class="line">                lineStyle : &#123;</span><br><span class="line">                    width : <span class="number">0</span>,</span><br><span class="line">                    color : <span class="string">'#000'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                chordStyle : &#123;</span><br><span class="line">                    lineStyle : &#123;</span><br><span class="line">                        width : <span class="number">2</span>,</span><br><span class="line">                        color : <span class="string">'#333'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    island: &#123;</span><br><span class="line">        r: <span class="number">15</span>,</span><br><span class="line">        calculateStep: <span class="number">0.1</span>  <span class="comment">// 滚轮可计算步长 0.1 = 10%</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    markPoint : &#123;</span><br><span class="line">        symbol: <span class="string">'pin'</span>,         <span class="comment">// 标注类型</span></span><br><span class="line">        symbolSize: <span class="number">10</span>,        <span class="comment">// 标注大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">        <span class="comment">//symbolRotate : null, // 标注旋转控制</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异，</span></span><br><span class="line">                <span class="comment">// borderColor: 各异,     // 标注边线颜色，优先于color </span></span><br><span class="line">                borderWidth: <span class="number">2</span>,            <span class="comment">// 标注边线线宽，单位px，默认为1</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">true</span>,</span><br><span class="line">                    position: <span class="string">'inside'</span> <span class="comment">// 可选为'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                    <span class="comment">// position: 'inside'  // 'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null     // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    markLine : &#123;</span><br><span class="line">        <span class="comment">// 标线起始和结束的symbol介绍类型，如果都一样，可以直接传string</span></span><br><span class="line">        symbol: [<span class="string">'circle'</span>, <span class="string">'arrow'</span>],  </span><br><span class="line">        <span class="comment">// 标线起始和结束的symbol大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">        symbolSize: [<span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="comment">// 标线起始和结束的symbol旋转控制</span></span><br><span class="line">        <span class="comment">//symbolRotate : null,</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,           // 标线主色，线色，symbol主色</span></span><br><span class="line">                <span class="comment">// borderColor: 随color,     // 标线symbol边框颜色，优先于color </span></span><br><span class="line">                borderWidth: <span class="number">2</span>,          <span class="comment">// 标线symbol边框线宽，单位px，默认为2</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span>,</span><br><span class="line">                    <span class="comment">// 可选为 'start'|'end'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    position: <span class="string">'inside'</span>,  </span><br><span class="line">                    textStyle: &#123;         <span class="comment">// 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                        color: <span class="string">'#333'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    <span class="comment">// color: 随borderColor, // 主色，线色，优先级高于borderColor和color</span></span><br><span class="line">                    <span class="comment">// width: 随borderWidth, // 优先于borderWidth</span></span><br><span class="line">                    type: <span class="string">'solid'</span>,</span><br><span class="line">                    shadowColor : <span class="string">'rgba(0,0,0,0)'</span>, <span class="comment">//默认透明</span></span><br><span class="line">                    shadowBlur: <span class="number">5</span>,</span><br><span class="line">                    shadowOffsetX: <span class="number">3</span>,</span><br><span class="line">                    shadowOffsetY: <span class="number">3</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">false</span></span><br><span class="line">                    <span class="comment">// position: 'inside' // 'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle : &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    textStyle: &#123;</span><br><span class="line">        decoration: <span class="string">'none'</span>,</span><br><span class="line">        fontFamily: <span class="string">'Arial, Verdana, sans-serif'</span>,</span><br><span class="line">        fontFamily2: <span class="string">'微软雅黑'</span>,    <span class="comment">// IE8- 字体模糊并且不支持不同字体混排，额外指定一份</span></span><br><span class="line">        fontSize: <span class="number">12</span>,</span><br><span class="line">        fontStyle: <span class="string">'normal'</span>,</span><br><span class="line">        fontWeight: <span class="string">'normal'</span></span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 默认标志图形类型列表</span></span><br><span class="line">    symbolList : [</span><br><span class="line">      <span class="string">'circle'</span>, <span class="string">'rectangle'</span>, <span class="string">'triangle'</span>, <span class="string">'diamond'</span>,</span><br><span class="line">      <span class="string">'emptyCircle'</span>, <span class="string">'emptyRectangle'</span>, <span class="string">'emptyTriangle'</span>, <span class="string">'emptyDiamond'</span></span><br><span class="line">    ],</span><br><span class="line">    loadingText : <span class="string">'Loading...'</span>,</span><br><span class="line">    <span class="comment">// 可计算特性配置，孤岛，提示颜色</span></span><br><span class="line">    calculable: <span class="literal">false</span>,              <span class="comment">// 默认关闭可计算特性</span></span><br><span class="line">    calculableColor: <span class="string">'rgba(255,165,0,0.6)'</span>,       <span class="comment">// 拖拽提示边框颜色</span></span><br><span class="line">    calculableHolderColor: <span class="string">'#ccc'</span>, <span class="comment">// 可计算占位提示颜色</span></span><br><span class="line">    nameConnector: <span class="string">' &amp; '</span>,</span><br><span class="line">    valueConnector: <span class="string">' : '</span>,</span><br><span class="line">    animation: <span class="literal">true</span>,</span><br><span class="line">    animationThreshold: <span class="number">2500</span>,       <span class="comment">// 动画元素阀值，产生的图形原素超过2500不出动画</span></span><br><span class="line">    addDataAnimation: <span class="literal">true</span>,         <span class="comment">// 动态数据接口是否开启动画效果</span></span><br><span class="line">    animationDuration: <span class="number">2000</span>,</span><br><span class="line">    animationEasing: <span class="string">'ExponentialOut'</span>    <span class="comment">//BounceOut</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[官网链接](&lt;a href=&quot;http://echarts.baidu.com/echarts2/doc/example/themeDesigner.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://echarts.baidu.com</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Echarts" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Echarts/"/>
    
    
    <category term="Echarts" scheme="https://liweipeng88.github.io/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title>web通讯的四种方式</title>
    <link href="https://liweipeng88.github.io/2020/06/21/web%E9%80%9A%E8%AE%AF%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%9F%AD%E8%BD%AE%E8%AF%A2%E3%80%81%E9%95%BF%E8%BD%AE%E8%AF%A2(comet)%E3%80%81%E9%95%BF%E8%BF%9E%E6%8E%A5(SSE)%E3%80%81WebSocket/"/>
    <id>https://liweipeng88.github.io/2020/06/21/web%E9%80%9A%E8%AE%AF%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%9F%AD%E8%BD%AE%E8%AF%A2%E3%80%81%E9%95%BF%E8%BD%AE%E8%AF%A2(comet)%E3%80%81%E9%95%BF%E8%BF%9E%E6%8E%A5(SSE)%E3%80%81WebSocket/</id>
    <published>2020-06-20T16:00:00.000Z</published>
    <updated>2020-08-17T09:23:27.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-短轮询"><a href="#一-短轮询" class="headerlink" title="一 短轮询"></a>一 短轮询</h1><h2 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h2><p>http端轮询是服务器收到请求不管是否有数据都直接响应 http 请求;<br>其实就是普通的轮询。指在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP request，然后由服务器返回最新的数据给客户端的浏览器。</p><h2 id="1-2-应用场景"><a href="#1-2-应用场景" class="headerlink" title="1.2 应用场景"></a>1.2 应用场景</h2><p>传统的web通信模式。后台处理数据，需要一定时间，前端想要知道后端的处理结果，就要不定时的向后端发出请求以获得最新情况。</p><h2 id="1-3-优点"><a href="#1-3-优点" class="headerlink" title="1.3 优点"></a>1.3 优点</h2><p>前后端程序编写比较容易。</p><h2 id="1-4-缺点"><a href="#1-4-缺点" class="headerlink" title="1.4 缺点"></a>1.4 缺点</h2><ul><li>请求中有大半是无用，难于维护，浪费带宽和服务器资源；</li><li>响应的结果没有顺序（因为是异步请求，当发送的请求没有返回结果的时候，后面的请求又被发送。而此时如果后面的请求比前面的请 求要先返回结果，那么当前面的请求返回结果数据时已经是过时无效的数据了）。</li></ul><h2 id="1-5-实例：适于小型应用。"><a href="#1-5-实例：适于小型应用。" class="headerlink" title="1.5 实例：适于小型应用。"></a>1.5 实例：适于小型应用。</h2><h2 id="1-6-前端实现："><a href="#1-6-前端实现：" class="headerlink" title="1.6 前端实现："></a>1.6 前端实现：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        xhr.open(<span class="string">'GET'</span>,<span class="string">'/user'</span>);</span><br><span class="line">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.send();</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h1 id="二-长轮询"><a href="#二-长轮询" class="headerlink" title="二 长轮询"></a>二 长轮询</h1><h2 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h2><p>客户端向服务器发送Ajax请求，服务器接到请求后<code>hold住连接</code>，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。</p><h2 id="2-2-优点"><a href="#2-2-优点" class="headerlink" title="2.2 优点"></a>2.2 优点</h2><p>在无消息的情况下不会频繁的请求，耗费资源小。</p><h2 id="2-3-缺点"><a href="#2-3-缺点" class="headerlink" title="2.3 缺点"></a>2.3 缺点</h2><ul><li>服务器hold连接会消耗资源</li><li>返回数据顺序无保证，难于管理维护。</li><li>浏览器端对统一服务器同时 http 连接有最大限制, 最好同一用户只存在一个长轮询;</li></ul><h2 id="2-4-实例：WebQQ、Hi网页版、Facebook-IM。"><a href="#2-4-实例：WebQQ、Hi网页版、Facebook-IM。" class="headerlink" title="2.4 实例：WebQQ、Hi网页版、Facebook IM。"></a>2.4 实例：WebQQ、Hi网页版、Facebook IM。</h2><h2 id="2-5-前端实现："><a href="#2-5-前端实现：" class="headerlink" title="2.5 前端实现："></a>2.5 前端实现：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">       xhr.open(<span class="string">'GET'</span>,<span class="string">'/user'</span>);</span><br><span class="line">       xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             ajax();</span><br><span class="line">       &#125;;</span><br><span class="line">       xhr.send();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="长轮训和短轮训"><a href="#长轮训和短轮训" class="headerlink" title="长轮训和短轮训"></a>长轮训和短轮训</h2><p>相同点：</p><ul><li>可以看出 http 长轮询和 http 短轮询的都会 hold 一段时间;</li></ul><p>不同点</p><ul><li>间隔发生在服务端还是浏览器端: http 长轮询在服务端会 hold 一段时间, http 短轮询在浏览器端 “hold”一段时间;</li></ul><h1 id="三-http-长连接"><a href="#三-http-长连接" class="headerlink" title="三 http 长连接"></a>三 http 长连接</h1><p>目前 http 协议普遍使用的是 1.1 版本, 之前有个 1.0 版本,两者之间的一个区别是 1.1 支持 http 长连接, 或者叫持久连接。<br>1.0 不支持 http 长连接, 每次一个 http请求响应后都关闭 tcp 连接, 下个 http 请求会重新建立 tcp 连接.</p><h2 id="3-1定义"><a href="#3-1定义" class="headerlink" title="3.1定义"></a>3.1定义</h2><p>多个 http 请求共用一个 tcp 连接; 这样可以减少多次临近 http 请求导致 tcp建立关闭所产生的时间消耗.</p><p>http 1.1 中在请求头和相应头中用 <code>connection</code>字段标识是否是 http长连接, connection: keep-alive, 表明是 http 长连接; connection:closed, 表明服务器关闭 tcp 连接</p><p>与 connection 对应的一个字段是 <code>keep-live</code>, http 响应头中出现, 他的格式是 <code>timeout=30,max=5</code>, timeout 是两次 http 请求保持的时间(s), , max 是这个 tcp 连接最多为几个 http请求重用</p><h2 id="3-2优点"><a href="#3-2优点" class="headerlink" title="3.2优点"></a>3.2优点</h2><p>消息即时到达，不发无用请求；管理起来也相对方便。</p><h2 id="3-3-缺点"><a href="#3-3-缺点" class="headerlink" title="3.3 缺点"></a>3.3 缺点</h2><p>服务器维护一个长连接会增加开销。</p><h2 id="3-4实例：Gmail聊天"><a href="#3-4实例：Gmail聊天" class="headerlink" title="3.4实例：Gmail聊天"></a>3.4实例：Gmail聊天</h2><h1 id="四-Web-Socket"><a href="#四-Web-Socket" class="headerlink" title="四 Web Socket"></a>四 Web Socket</h1><h2 id="4-1定义"><a href="#4-1定义" class="headerlink" title="4.1定义"></a>4.1定义</h2><p>Websocket是基于<code>HTTP协</code>议的，在和服务端建立了链接后，服务端有数据有了变化后会主动推送给前端。</p><h2 id="4-2优点"><a href="#4-2优点" class="headerlink" title="4.2优点"></a>4.2优点</h2><p>请求响应快，不浪费资源。（传统的http请求，其并发能力都是依赖同时发起多个TCP连接访问服务器实现的(因此并发数受限于浏览器允许的并发连接数)，而websocket则允许我们在一条ws连接上同时并发多个请求，即在A请求发出后A响应还未到达，就可以继续发出B请求。由于TCP的慢启动特性（新连接速度上来是需要时间的），以及连接本身的握手损耗，都使得websocket协议的这一特性有很大的效率提升；http协议的头部太大，且每个请求携带的几百上千字节的头部大部分是重复的，websocket则因为复用长连接而没有这一问题。）</p><h2 id="4-3缺点："><a href="#4-3缺点：" class="headerlink" title="4.3缺点："></a>4.3缺点：</h2><ul><li>主流浏览器支持的Web Socket版本不一致；</li><li>服务端没有标准的API。</li></ul><h2 id="4-4实例：实现即时通讯-如股票交易行情分析、聊天室、在线游戏等，替代轮询和长轮询"><a href="#4-4实例：实现即时通讯-如股票交易行情分析、聊天室、在线游戏等，替代轮询和长轮询" class="headerlink" title="4.4实例：实现即时通讯:如股票交易行情分析、聊天室、在线游戏等，替代轮询和长轮询"></a>4.4实例：实现即时通讯:如股票交易行情分析、聊天室、在线游戏等，替代轮询和长轮询</h2><h2 id="4-5-解决：解决了http协议的两个问题。"><a href="#4-5-解决：解决了http协议的两个问题。" class="headerlink" title="4.5 解决：解决了http协议的两个问题。"></a>4.5 解决：解决了http协议的两个问题。</h2><ul><li>1.服务端的被动性。http协议是只有客户端询问之后才回复。解决了同步有延迟的问题</li><li>2.解决了服务器上消耗资源的问题</li></ul><h2 id="4-6-实现："><a href="#4-6-实现：" class="headerlink" title="4.6 实现："></a>4.6 实现：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要先npm install ws</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//服务器端</span></span><br><span class="line"><span class="keyword">var</span> Server = <span class="built_in">require</span>(<span class="string">'ws'</span>).Server;</span><br><span class="line"><span class="keyword">var</span> wss = <span class="keyword">new</span> Server(&#123;</span><br><span class="line">    port:<span class="number">2000</span></span><br><span class="line">&#125;);</span><br><span class="line">wss.on(<span class="string">'connection'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ws</span>)</span>&#123;</span><br><span class="line">    ws.on(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        ws.send(<span class="string">'你好,客户端,我是服务器!'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//node客户端</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> WebSocket = <span class="built_in">require</span>(<span class="string">'ws'</span>);</span><br><span class="line"><span class="keyword">var</span> socket = <span class="keyword">new</span> WebSocket(<span class="string">'ws://localhost:2000/'</span>);</span><br><span class="line">socket.on(<span class="string">'open'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    socket.send(<span class="string">'你好，服务器,我是客户端'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">socket.on(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(event);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//html客户端(注:浏览器客户端与node客户端只需要一种)</span></span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> socket = <span class="keyword">new</span> WebSocket(<span class="string">'ws://localhost:2000/'</span>);</span><br><span class="line">    socket.onopen = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;;</span><br><span class="line">    socket.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(event.data)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-7-WebSocket四个事件操作"><a href="#4-7-WebSocket四个事件操作" class="headerlink" title="4.7 WebSocket四个事件操作"></a>4.7 WebSocket四个事件操作</h2><ul><li><p>onmessage收到服务器响应时执行</p></li><li><p>onerroe 出现异常时执行</p></li><li><p>onopen 建立起连接时执行</p></li><li><p>onclose 断开连接时执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">websocket = <span class="literal">null</span>;  </span><br><span class="line">url=<span class="string">"127.xxxxxxx/xxx"</span>  </span><br><span class="line"><span class="keyword">var</span> websocketAddress = <span class="string">'ws://'</span>+ url  ;</span><br><span class="line"><span class="comment">//判断当前浏览器是否支持WebSocket  </span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">'WebSocket'</span> <span class="keyword">in</span> <span class="built_in">window</span>)&#123;  </span><br><span class="line">    websocket = <span class="keyword">new</span> WebSocket(websocketAddress);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">else</span>&#123;  </span><br><span class="line">    alert(<span class="string">'当前浏览器不支持WebSocket'</span>)  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//连接发生错误的回调方法  </span></span><br><span class="line">websocket.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    <span class="comment">//notificationReminder("错误");  </span></span><br><span class="line">&#125;;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//连接成功时的回调方法  </span></span><br><span class="line">websocket.onopen = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(event);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//接收到消息的回调方法  </span></span><br><span class="line">websocket.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;  </span><br><span class="line">    $scope.notificationReminder(event.data);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//连接关闭的回调方法  </span></span><br><span class="line">websocket.onclose = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    <span class="comment">//notificationReminder("关闭");  </span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。  </span></span><br><span class="line"><span class="built_in">window</span>.onbeforeunload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    websocket.close();  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//发送消息  </span></span><br><span class="line">$scope.send = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    websocket.send(localStorageService.get(<span class="string">'UserID'</span>));  </span><br><span class="line">&#125;  </span><br><span class="line">$scope.closeWebSocket = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    websocket.close();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-短轮询&quot;&gt;&lt;a href=&quot;#一-短轮询&quot; class=&quot;headerlink&quot; title=&quot;一 短轮询&quot;&gt;&lt;/a&gt;一 短轮询&lt;/h1&gt;&lt;h2 id=&quot;1-1-定义&quot;&gt;&lt;a href=&quot;#1-1-定义&quot; class=&quot;headerlink&quot; title=&quot;1</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/JS/"/>
    
    
    <category term="JS" scheme="https://liweipeng88.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目跳转请求数据窗口上方的进度条显示</title>
    <link href="https://liweipeng88.github.io/2020/06/06/Vue%E9%A1%B9%E7%9B%AE%E8%B7%B3%E8%BD%AC%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%98%BE%E7%A4%BA/"/>
    <id>https://liweipeng88.github.io/2020/06/06/Vue%E9%A1%B9%E7%9B%AE%E8%B7%B3%E8%BD%AC%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%98%BE%E7%A4%BA/</id>
    <published>2020-06-05T16:00:00.000Z</published>
    <updated>2020-07-22T02:52:45.922Z</updated>
    
    <content type="html"><![CDATA[<p>1.安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save nprogress</span><br></pre></td></tr></table></figure><p>2.在main.js中引入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 import NProgress from &#39;nprogress&#39;</span><br><span class="line">2 import &#39;nprogress&#x2F;nprogress.css&#39;</span><br></pre></td></tr></table></figure><p>3.在main.js中进行配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 NProgress.configure(&#123;     </span><br><span class="line">2     easing: &#39;ease&#39;,  &#x2F;&#x2F; 动画方式    </span><br><span class="line">3     speed: 500,  &#x2F;&#x2F; 递增进度条的速度    </span><br><span class="line">4     showSpinner: false, &#x2F;&#x2F; 是否显示加载ico    </span><br><span class="line">5     trickleSpeed: 200, &#x2F;&#x2F; 自动递增间隔    </span><br><span class="line">6     minimum: 0.3 &#x2F;&#x2F; 初始化时的最小百分比</span><br><span class="line">7 &#125;)</span><br></pre></td></tr></table></figure><p>4.在main.js中对路由钩子进行设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &#x2F;&#x2F;当路由进入前</span><br><span class="line"> router.beforeEach((to, from , next) &#x3D;&gt; &#123;</span><br><span class="line">     &#x2F;&#x2F; 每次切换页面时，调用进度条</span><br><span class="line">    NProgress.start();</span><br><span class="line">    &#x2F;&#x2F; 这个一定要加，没有next()页面不会跳转的。这部分还不清楚的去翻一下官网就明白了</span><br><span class="line">     next();</span><br><span class="line"> &#125;);</span><br><span class="line">&#x2F;&#x2F;当路由进入后：关闭进度条</span><br><span class="line">router.afterEach(() &#x3D;&gt; &#123;  </span><br><span class="line">    &#x2F;&#x2F; 在即将进入新的页面组件前，关闭掉进度条</span><br><span class="line">    NProgress.done()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>5.通过 axios 拦截器来调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// axios 请求拦截器 发起请求就会触发</span><br><span class="line">axios.interceptors.request.use(config =&gt; &#123;</span><br><span class="line">  // 发起请求则展示进度条</span><br><span class="line">  NProgress.start()</span><br><span class="line">  // 必须要返回config</span><br><span class="line">  return config;</span><br><span class="line">&#125;)</span><br><span class="line">// 请求有response后则触发</span><br><span class="line">axios.interceptors.response.use(config =&gt; &#123;</span><br><span class="line">  // 请求结束则结束进度条</span><br><span class="line">  NProgress.done()</span><br><span class="line">  // 必须要返回config</span><br><span class="line">  return config</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/vue/"/>
    
    
    <category term="vue" scheme="https://liweipeng88.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透的几种方式</title>
    <link href="https://liweipeng88.github.io/2020/06/06/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://liweipeng88.github.io/2020/06/06/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2020-06-05T16:00:00.000Z</published>
    <updated>2020-07-22T02:39:46.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>如何让任何地方都能访问自己家里的笔记本上的应用？</li><li>如何让局域网的服务器可以被任何地方访问到？</li></ul><p>有很多类似的需求，我们可以统一用一个解决方案：<code>内网穿透</code>。下面介绍几种内网穿透的方式，供大家学习和参考。每一种工具只要亲自试了都会更新成一篇文章，给出教程，没有试的会给简单的介绍和工具信息。</p><h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><ul><li>Ngrok</li><li>Ssh、autossh</li><li>Natapp</li><li>Frp</li><li>Lanproxy</li><li>Spike</li><li>花生壳</li></ul><h4 id="Ngrok"><a href="#Ngrok" class="headerlink" title="Ngrok"></a>Ngrok</h4><ul><li>项目主页：<a href="https://ngrok.com/" target="_blank" rel="noopener">https://ngrok.com/</a></li><li>项目介绍： 一个通过任何NAT或防火墙为您的本地主机服务器提供即时访问、安全的URL的命令。类似花生壳，分为服务端和客户端，也可以自己搭建服务端。</li><li>使用教程：<a href="https://yangqiang.im/?p=750" target="_blank" rel="noopener">点击跳转</a></li></ul><h4 id="Ssh"><a href="#Ssh" class="headerlink" title="Ssh"></a>Ssh</h4><p><em>配合autossh工具使用，因为autossh会容错</em></p><ul><li>项目主页：<a href="http://www.harding.motd.ca/autossh/" target="_blank" rel="noopener">http://www.harding.motd.ca/autossh/</a></li><li>项目介绍：自动重新启动SSH会话和隧道。autossh是一个程序，用于启动ssh的副本并进行监控，在死亡或停止传输流量时根据需要重新启动它。 这个想法来自rstunnel（Reliable SSH Tunnel），但是在C中实现。作者的观点是，它不像匆匆忙忙的工作那么容易。使用端口转发环路或远程回显服务进行连接监视。在遇到连接拒绝等快速故障时，关闭连接尝试的速度。在OpenBSD，Linux，Solaris，Mac OS X，Cygwin和AIX上编译和测试; 应该在其他BSD上工作。免费软件。</li><li>使用教程：<a href="http://www.yangqiang.im/?p=698" target="_blank" rel="noopener">点击跳转</a></li></ul><h4 id="Natapp"><a href="#Natapp" class="headerlink" title="Natapp"></a>Natapp</h4><ul><li>项目主页：<a href="https://natapp.cn/" target="_blank" rel="noopener">https://natapp.cn/</a></li><li>项目介绍：基于ngrok的国内收费内网穿透工具，类似花生壳，有免费版本，比花生壳好。免费版本：提供http,https,tcp全隧道穿透，随机域名/TCP端口，不定时强制更换域名/端口，自定义本地端口</li></ul><h4 id="Frp"><a href="#Frp" class="headerlink" title="Frp"></a>Frp</h4><ul><li>项目主页：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></li><li>项目介绍：frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</li></ul><h4 id="Lanproxy"><a href="#Lanproxy" class="headerlink" title="Lanproxy"></a>Lanproxy</h4><ul><li>项目主页：<a href="https://github.com/ffay/lanproxy" target="_blank" rel="noopener">https://github.com/ffay/lanproxy</a></li><li>项目介绍：lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，目前仅支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面…）。目前市面上提供类似服务的有花生壳、TeamView、GoToMyCloud等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。</li></ul><h4 id="Spike"><a href="#Spike" class="headerlink" title="Spike"></a>Spike</h4><ul><li>项目主页：<a href="https://github.com/slince/spike" target="_blank" rel="noopener">https://github.com/slince/spike</a></li><li>项目介绍：Spike是一个可以用来将你的内网服务暴露在公网的快速的反向代理，基于ReactPHP，采用IO多路复用模型。采用Php实现。</li></ul><h4 id="花生壳"><a href="#花生壳" class="headerlink" title="花生壳"></a>花生壳</h4><ul><li>项目主页：<a href="https://hsk.oray.com/" target="_blank" rel="noopener">https://hsk.oray.com/</a></li><li>项目介绍：商业化比较成功的内网穿透。个人开发很不推荐，收费贵，企业可以考虑使用。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如何让任何地方都能访问自己家里的笔记本上的应用？&lt;/li&gt;
&lt;li&gt;如何让局域网的服务器可以被任何地方访问到？&lt;/li&gt;
&lt;/u</summary>
      
    
    
    
    <category term="其他" scheme="https://liweipeng88.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="内网穿透" scheme="https://liweipeng88.github.io/categories/%E5%85%B6%E4%BB%96/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
    <category term="其他" scheme="https://liweipeng88.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>浅谈前端八大UI库</title>
    <link href="https://liweipeng88.github.io/2020/05/16/%E6%B5%85%E8%B0%88%E5%89%8D%E7%AB%AF%E5%85%AB%E5%A4%A7UI%E5%BA%93/"/>
    <id>https://liweipeng88.github.io/2020/05/16/%E6%B5%85%E8%B0%88%E5%89%8D%E7%AB%AF%E5%85%AB%E5%A4%A7UI%E5%BA%93/</id>
    <published>2020-05-15T16:00:00.000Z</published>
    <updated>2020-06-11T01:50:35.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Element-UI"><a href="#1-Element-UI" class="headerlink" title="1. Element-UI"></a>1. Element-UI</h2><ul><li>element-UI是现在基于Vue的一个非常好用的桌面端UI组件库</li><li>支持@vue/cli项目的直接添加，支持按需导入、国际化、支持自定义主题③文档清晰，学习成本低</li><li>提供的组件足够使用，UI的风格符合目前大众的普遍审美</li><li>如果你想要做一个公司级别的产品，那么Element-Ul基本可以满足需求，但是难免样式、风格会同质化严重</li></ul><h2 id="2-Vuetify"><a href="#2-Vuetify" class="headerlink" title="2. Vuetify"></a>2. Vuetify</h2><ul><li>vuetify是国外团队进行开发的一个基于vue的组件库</li><li>支持@vue/cli项目的直接添加，支持按需导入、国际化、提供了定制功能(样式、颜色、主题等等)</li><li>文档相对清晰，但是和国人的思维不太一样，导致学习成本相对高一些</li><li>提供的组件足够使用，并且提供了v-开头的扩展指令,还有付费专题模块</li><li>UI的风格使用的是Google推出的Material Design的设计风格,在国内推广度相对低一些</li><li>使用vuetify在UI样式上，会有- -些额外的风险,但是可以避免同质化的问题，比较适合些个人或者需要彰显个性的项目</li></ul><h2 id="3-Ant-Design"><a href="#3-Ant-Design" class="headerlink" title="3. Ant Design"></a>3. Ant Design</h2><ul><li>Ant Design是阿里巴巴-蚂蚁金服体验技术部所设计的- -个UI库, - -般用于基于React的项目</li><li>支持在create-react-app (React 官方脚手架)项目的直接添加， 支持按需导入、国际化、提供了定制主题</li><li>文档清晰，学习成本低，提供的组件足够使用，并且提供了精品社区服务</li><li>UI的风格符合目前大众的普遍审美</li><li>如果你想要做一个公司级别的产品， 那么Ant Design基本可以满足需求，但是难免样式、风格会同质化严重</li></ul><h2 id="6-Vant-UI"><a href="#6-Vant-UI" class="headerlink" title="6. Vant-UI"></a>6. Vant-UI</h2><ul><li>Vant-UI是有赞前端团队所设计的一-个UI库, -般用于基于Vue的移动端项目</li><li>支持@vue/cli项目的直接添加，支持按需导入、国际化、提供了定制功能，(样式、颜色、主题等等)</li><li>文档清晰，学习成本低，UI的风格以及交互操作可以达到现在的主流标准</li><li>提供的组件足够使用，性能不错，并且提供了基于商城业务的成套组件</li><li>适用于web app或者基于移动端的网页开发</li></ul><h2 id="7-Framework7"><a href="#7-Framework7" class="headerlink" title="7. Framework7"></a>7. Framework7</h2><ul><li>Framework7是独立开发者所设计的一一个全功能框架。可以用来构建IOS. Android和桌面应用程序。</li><li>本身是一个独立的框架，同时也可以配合vue和react来使用。整体比较重</li><li>文档汉化不是很好，具有一定的学习成本。</li><li>提供的功能组件、交互视图足够强大,并且也有很多新的概念,性能优秀</li><li>UI 的风格以及交互操作可以达到原生APP 95%的体验</li><li>适用于没有资深前端开发工程师的公司使用。</li></ul><h2 id="8-WEUI"><a href="#8-WEUI" class="headerlink" title="8. WEUI"></a>8. WEUI</h2><ul><li>weui是微信官方团队开发的一套同微信原生视觉体验一 致的基础样式库。</li><li>因为只应对微信内部网页和微信小程序，所以所提供的功能相对简单。</li><li>文档稍微乱-些。提供的功能组件有限，主要还是应对场景的问题。</li><li>提供的功能组件有限，主要还是应对场景的问题。</li><li>适用微信内部网页和微信小程序。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Element-UI&quot;&gt;&lt;a href=&quot;#1-Element-UI&quot; class=&quot;headerlink&quot; title=&quot;1. Element-UI&quot;&gt;&lt;/a&gt;1. Element-UI&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;element-UI是现在基于Vue的一个非</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="UI库" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/UI%E5%BA%93/"/>
    
    
    <category term="UI库" scheme="https://liweipeng88.github.io/tags/UI%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>express常用的中间件</title>
    <link href="https://liweipeng88.github.io/2020/03/05/express%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/"/>
    <id>https://liweipeng88.github.io/2020/03/05/express%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-03-04T16:00:00.000Z</published>
    <updated>2020-07-22T02:04:22.040Z</updated>
    
    <content type="html"><![CDATA[<p>Express是一个自身功能极简，完全是有路由和中间件构成的一个web开发框架：本质上说，一个express的应用就是在调用各种中间件。</p><h4 id="中间件的功能："><a href="#中间件的功能：" class="headerlink" title="中间件的功能："></a>中间件的功能：</h4><ol><li><p>执行任何代码。</p></li><li><p>修改请求和响应对象。</p></li><li><p>终结请求-响应循环。</p></li><li><p>调用堆栈中的下一个中间件。</p><!--重点--><p>如果在post，get请求过程中的回调函数没有next()参数，那么就匹配上第一个路由，就不会往下匹配了。如果想往下匹配的话，就需要写next();</p><h3 id="Express-常用的中间件介绍"><a href="#Express-常用的中间件介绍" class="headerlink" title="Express 常用的中间件介绍"></a>Express 常用的中间件介绍</h3><h5 id="1-应用级别的中间件"><a href="#1-应用级别的中间件" class="headerlink" title="1.应用级别的中间件"></a>1.应用级别的中间件</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;<span class="comment">/*表示匹配任何路由*/</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line">    next()<span class="comment">/*表示匹配完成这个中间件就继续往下执行。*/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="2-路由中间件"><a href="#2-路由中间件" class="headerlink" title="2.路由中间件"></a>2.路由中间件</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"/"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res,next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"匹配成功"</span>);</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">"/"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> list = [<span class="number">1</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">55</span>, <span class="number">66</span>, <span class="number">45</span>]</span><br><span class="line">    res.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">        <span class="string">"list"</span>: list</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="3-错误处理中间件（404页面也是属于其中的一种）"><a href="#3-错误处理中间件（404页面也是属于其中的一种）" class="headerlink" title="3.错误处理中间件（404页面也是属于其中的一种）"></a>3.错误处理中间件（404页面也是属于其中的一种）</h5><!--如果是404的话 一般是放置最后的--><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).send(<span class="string">"这个是404 没有路由匹配到！"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-内置中间件（例如：静态路由匹配）"><a href="#4-内置中间件（例如：静态路由匹配）" class="headerlink" title="4.内置中间件（例如：静态路由匹配）"></a>4.内置中间件（例如：静态路由匹配）</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">'/static'</span>,express.static(<span class="string">"public"</span>));</span><br></pre></td></tr></table></figure><!--表示现在 你就可以通过带有“/static ”前缀的地址来访问public目录下面的文件了--><h5 id="5-第三方中间件"><a href="#5-第三方中间件" class="headerlink" title="5.第三方中间件"></a>5.第三方中间件</h5><p>post请求在express中是不能直接获取的，但是我们可以使用第三方中间件body-parser模块来获取。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一步安装</span></span><br><span class="line">npm install body-parser</span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"><span class="comment">// parse application/x-www-form-urlencoded</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;))</span><br><span class="line"><span class="comment">// parse application/json</span></span><br><span class="line">app.use(bodyParser.json())</span><br></pre></td></tr></table></figure><!--配置好以后 我们就可以用req.body来获取 post提交的数据--></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Express是一个自身功能极简，完全是有路由和中间件构成的一个web开发框架：本质上说，一个express的应用就是在调用各种中间件。&lt;/p&gt;
&lt;h4 id=&quot;中间件的功能：&quot;&gt;&lt;a href=&quot;#中间件的功能：&quot; class=&quot;headerlink&quot; title=&quot;中间</summary>
      
    
    
    
    <category term="后端" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="框架" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="后端" scheme="https://liweipeng88.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>根据地址栏输入的地址请求对应的接口数据</title>
    <link href="https://liweipeng88.github.io/2020/03/05/vue%E8%8E%B7%E5%8F%96%E5%9C%B0%E5%9D%80%E6%A0%8F%E5%9C%B0%E5%9D%80%E8%AF%B7%E6%B1%82%E5%AF%B9%E5%BA%94%E7%9A%84%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%20-%20%E5%89%AF%E6%9C%AC/"/>
    <id>https://liweipeng88.github.io/2020/03/05/vue%E8%8E%B7%E5%8F%96%E5%9C%B0%E5%9D%80%E6%A0%8F%E5%9C%B0%E5%9D%80%E8%AF%B7%E6%B1%82%E5%AF%B9%E5%BA%94%E7%9A%84%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%20-%20%E5%89%AF%E6%9C%AC/</id>
    <published>2020-03-04T16:00:00.000Z</published>
    <updated>2020-07-22T02:37:27.019Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// window.location.hostname  获取地址输入的地址</span><br><span class="line"></span><br><span class="line">if (window.location.hostname == '10.10.10.220') &#123;</span><br><span class="line">  axios.defaults.baseURL = "http://10.10.10.220:8111/sfFinace/"; //服务器地址</span><br><span class="line">&#125; else if (window.location.hostname == '221.11.70.78') &#123;</span><br><span class="line">  axios.defaults.baseURL = "http://221.11.70.78:8111/sfFinace/"; //服务器地址</span><br><span class="line">&#125; else if (window.location.hostname == '127.0.0.1' || window.location.hostname == 'localhost') &#123;</span><br><span class="line">  axios.defaults.baseURL = "http://192.168.0.63:8080/sfFinace/"; //本地地址</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/JS/"/>
    
    
    <category term="JS" scheme="https://liweipeng88.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>请求接口的简单封装</title>
    <link href="https://liweipeng88.github.io/2020/03/03/nui-app%E9%87%8C%E9%9D%A2%E7%9A%84%E8%AF%B7%E6%B1%82%E6%8E%A5%E5%8F%A3%E7%AE%80%E5%8D%95%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>https://liweipeng88.github.io/2020/03/03/nui-app%E9%87%8C%E9%9D%A2%E7%9A%84%E8%AF%B7%E6%B1%82%E6%8E%A5%E5%8F%A3%E7%AE%80%E5%8D%95%E7%9A%84%E5%B0%81%E8%A3%85/</id>
    <published>2020-03-02T16:00:00.000Z</published>
    <updated>2020-07-08T01:38:47.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新建一个封装接口的文件"><a href="#新建一个封装接口的文件" class="headerlink" title="新建一个封装接口的文件"></a>新建一个封装接口的文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">const BASE_URL &#x3D; &#39;http:&#x2F;&#x2F;localhost:8082&#39;</span><br><span class="line"></span><br><span class="line">export const myRequest &#x3D; (options) &#x3D;&gt; &#123;</span><br><span class="line">return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">nui.request(&#123;</span><br><span class="line">url:BASE_URL + options.url,</span><br><span class="line">method: options.method || &#39;GET&#39;,</span><br><span class="line">data: options.data || &#123;&#125;,</span><br><span class="line">success: res &#x3D;&gt;&#123;</span><br><span class="line">if(res.data.status !&#x3D;&#x3D; 0)&#123;</span><br><span class="line">return nui.showToast(&#123;</span><br><span class="line">title:&#39;获取数据失败&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">resolve(res)</span><br><span class="line">&#125;,</span><br><span class="line">fail:(err) &#x3D;&gt;&#123;</span><br><span class="line">nui.showToast(&#123;</span><br><span class="line">title:&#39;请求接口失败&#39;</span><br><span class="line">&#125;)</span><br><span class="line">reject(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="挂在到Vue原型上"><a href="#挂在到Vue原型上" class="headerlink" title="挂在到Vue原型上"></a>挂在到Vue原型上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import App from &#39;.&#x2F;App&#39;</span><br><span class="line">import &#123; myRequest &#125; from &#39;.&#x2F;util&#x2F;api.js&#39;</span><br><span class="line"></span><br><span class="line">Vue.prototype.$myRequest &#x3D; myRequest</span><br><span class="line">Vue.config.productionTip &#x3D; false</span><br><span class="line"></span><br><span class="line">App.mpType &#x3D; &#39;app&#39;</span><br><span class="line"></span><br><span class="line">const app &#x3D; new Vue(&#123;</span><br><span class="line">...App</span><br><span class="line">&#125;)</span><br><span class="line">app.$mount()</span><br></pre></td></tr></table></figure><h3 id="要请求接口的页面"><a href="#要请求接口的页面" class="headerlink" title="要请求接口的页面"></a>要请求接口的页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">async getSwipersList()&#123;</span><br><span class="line">const res &#x3D; await this.$myRequest(&#123;</span><br><span class="line">url:&#39;&#x2F;api&#x2F;getBanner&#39;</span><br><span class="line">&#125;)</span><br><span class="line">console.log(res)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;新建一个封装接口的文件&quot;&gt;&lt;a href=&quot;#新建一个封装接口的文件&quot; class=&quot;headerlink&quot; title=&quot;新建一个封装接口的文件&quot;&gt;&lt;/a&gt;新建一个封装接口的文件&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue学习" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="vue" scheme="https://liweipeng88.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 数据库优化操作</title>
    <link href="https://liweipeng88.github.io/2020/02/15/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://liweipeng88.github.io/2020/02/15/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-07-22T01:53:29.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分片相关"><a href="#分片相关" class="headerlink" title="分片相关"></a>分片相关</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">db.runCommand(&#123; isdbgrid : 1&#125;);      # 判断是否Shard集群</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出所有分片信息</span></span><br><span class="line">use admin;</span><br><span class="line">db.runCommand(&#123; listshards : 1&#125;);</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出开启分片的数据库</span></span><br><span class="line">use config;</span><br><span class="line">db.databases.find(&#123;"partitioned":true&#125;);</span><br><span class="line">db.databases.find();                # 列出所有数据库分片情况</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看分片的片键</span></span><br><span class="line">use config;</span><br><span class="line">db.collections.find();</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除片键</span></span><br><span class="line">use config;</span><br><span class="line">db.collections.remove(&#123;"_id":"testdb.t_user"&#125;);</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 刷新mongos的缓存</span></span><br><span class="line">use admin;</span><br><span class="line">db.adminCommand(&#123;"flushRouterConfig":1&#125;);</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除分片节点</span></span><br><span class="line">db.runCommand(&#123;removeShard:"shard-2"&#125;);</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 其他</span></span><br><span class="line">db.getPrevError();       # 查询之前的错误信息</span><br><span class="line">db.resetError();         # 清除错误记录</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建索引</span></span><br><span class="line">db.&lt;foo&gt;.ensureIndex(&#123;name: 1&#125;);</span><br><span class="line">db.&lt;foo&gt;.ensureIndex(&#123;name: 1, ts: -1&#125;);</span><br><span class="line"></span><br><span class="line">db.&lt;foo&gt;.getIndexes();         # 查询当前聚集集合所有索引</span><br><span class="line">db.&lt;foo&gt;.totalIndexSize();     # 查看总索引记录大小</span><br><span class="line">db.users.reIndex();            # 读取当前集合的所有index信息</span><br><span class="line">db.users.dropIndex("name_1");  # 删除指定索引</span><br><span class="line">db.users.dropIndexes();        # 删除所有索引索引</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;分片相关&quot;&gt;&lt;a href=&quot;#分片相关&quot; class=&quot;headerlink&quot; title=&quot;分片相关&quot;&gt;&lt;/a&gt;分片相关&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="后端" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="MongoDB" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/MongoDB/"/>
    
    
    <category term="数据库" scheme="https://liweipeng88.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB用户相关操作</title>
    <link href="https://liweipeng88.github.io/2020/02/14/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://liweipeng88.github.io/2020/02/14/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-02-13T16:00:00.000Z</published>
    <updated>2020-07-22T01:49:38.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户相关操作"><a href="#用户相关操作" class="headerlink" title="用户相关操作"></a>用户相关操作</h2><p>如果系统已经启动权限验证，必须使用拥有权限的账户登录操作。mongodb角色权限文档：<a href="https://docs.mongodb.com/v3.6/reference/built-in-roles/index.html" target="_blank" rel="noopener">https://docs.mongodb.com/v3.6/reference/built-in-roles/index.html</a></p><p>创建一个超级用户角色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use admin;</span><br><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: &quot;admin&quot;,</span><br><span class="line">    pwd: &quot;pwd123&quot;,</span><br><span class="line">    roles: [ &quot;root&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>root角色为所有资源提供完全权限，相当于MySQL里的 root 账户。</p><p>在 testdb 数据库中创建一个 testuser 账户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use testdb;</span><br><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: &quot;testuser&quot;,</span><br><span class="line">    pwd: &quot;123456&quot;,</span><br><span class="line">    roles: [ &#123; role: &quot;dbOwner&quot;, db: &quot;testdb&quot; &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>dbOwner</code>代表数据库所有者，可以对数据库执行任何管理操作，包含<code>readWrite</code>、<code>dbAdmin</code>和<code>userAdmin</code>角色的权限。</p><p>在 admin 库中创建一个具有多个权限的账户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">user admin;</span><br><span class="line">db.createUser(</span><br><span class="line">  &#123; user: &quot;admin&quot;,</span><br><span class="line">    pwd: &quot;123456&quot;,</span><br><span class="line">    roles: [ &quot;userAdminAnyDatabase&quot;, &quot;dbAdminAnyDatabase&quot;, &quot;readWriteAnyDatabase&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line">show users;            # 显示当前库所有用户</span><br><span class="line">db.getUser(&#39;admin&#39;);   # 查看用户详情</span><br><span class="line">db.dropUser(&quot;admin&quot;);  # 删除用户</span><br><span class="line">db.logout();           # 退出当前登录</span><br><span class="line"></span><br><span class="line"># 修改用户密码</span><br><span class="line">use testdb;</span><br><span class="line">db.updateUser(&quot;testuser&quot;, &#123;pwd: &quot;123456789&quot;&#125;);</span><br><span class="line">db.changeUserPassword(&quot;testuser&quot;, &quot;123456789&quot;);</span><br><span class="line"></span><br><span class="line"># 修改用户角色</span><br><span class="line">use testdb;</span><br><span class="line">db.updateUser(</span><br><span class="line">  &quot;&lt;username&gt;&quot;,</span><br><span class="line">  roles : [&#123; role: &quot;&quot;, db: &quot;&quot; &#125;]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>用户相关操作文档：<a href="https://docs.mongodb.com/manual/reference/method/js-user-management/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/method/js-user-management/</a></p><h2 id="连接数据库身份验证"><a href="#连接数据库身份验证" class="headerlink" title="连接数据库身份验证"></a>连接数据库身份验证</h2><p>连接后身份验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 20000</span><br><span class="line">use admin;</span><br><span class="line">db.auth(&quot;testuser&quot;, &quot;123456&quot;);</span><br></pre></td></tr></table></figure><p>连接时身份验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27017 -u &quot;root&quot; -p &quot;123456&quot; --authenticationDatabase &quot;admin&quot;</span><br></pre></td></tr></table></figure><p>连接时身份验证，并进入指定库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 20000 -u &quot;root&quot; -p &quot;123456&quot; --authenticationDatabase &quot;admin&quot;</span><br><span class="line">mongo --port 20000 -u &quot;testuser&quot; -p &quot;123456&quot; --authenticationDatabase &quot;admin&quot; testdb</span><br></pre></td></tr></table></figure><p>代码、客户端连接方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongodb:&#x2F;&#x2F;testuser:123456789@192.168.0.3:20000,192.168.0.4:20000,192.168.0.5:20000&#x2F;testdb</span><br><span class="line">mongodb:&#x2F;&#x2F;root:pwd123@192.168.0.3:20000,192.168.0.4:20000,192.168.0.5:20000&#x2F;admin</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用户相关操作&quot;&gt;&lt;a href=&quot;#用户相关操作&quot; class=&quot;headerlink&quot; title=&quot;用户相关操作&quot;&gt;&lt;/a&gt;用户相关操作&lt;/h2&gt;&lt;p&gt;如果系统已经启动权限验证，必须使用拥有权限的账户登录操作。mongodb角色权限文档：&lt;a href=&quot;ht</summary>
      
    
    
    
    <category term="后端" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="MongoDB" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/MongoDB/"/>
    
    
    <category term="数据库" scheme="https://liweipeng88.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 增删改查 集合数据</title>
    <link href="https://liweipeng88.github.io/2020/02/13/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://liweipeng88.github.io/2020/02/13/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-02-12T16:00:00.000Z</published>
    <updated>2020-07-22T01:45:23.151Z</updated>
    
    <content type="html"><![CDATA[<h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><p>在user集合添加数据，添加的数据的数据列，没有固定，根据添加的数据为准：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.users.save(&#123;name: <span class="string">'zhangsan'</span>, age: <span class="number">25</span>, sex: true&#125;);</span><br><span class="line"><span class="keyword">for</span>(var i=<span class="number">1</span>;i&lt;=<span class="number">20000</span>;i++) db.users.save(&#123;id:i, testkey:<span class="string">"test_val_"</span>+i&#125;)</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>语法：<code>db.collection.update(criteria, objNew, upsert, multi )</code></p><ul><li><code>criteria</code>查询条件，类似 sql <code>update</code>查询内<code>where</code>后面的。</li><li><code>objNew</code>update 的对象和一些更新的操作符（如<code>$,$inc</code>…）等，可以理解为sql <code>update</code>查询内<code>set</code>后面的。</li><li><code>upsert</code>如果不存在update的记录，是否插入<code>objNew，true</code>为插入，默认是<code>false</code>，不插入。</li><li><code>multi</code>默认是<code>false</code>，只更新找到的第一条记录，如果这个参数为<code>true</code>，就把按条件查出来多条记录全部更新。</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db.users.update(&#123;age: <span class="number">25</span>&#125;, &#123;<span class="variable">$set:</span> &#123;name: <span class="string">'changeName'</span>&#125;&#125;, false, true);</span><br><span class="line"><span class="comment"># 等于SQL：update users set name = 'changeName' where age = 25;</span></span><br><span class="line"></span><br><span class="line">db.users.update(&#123;name: <span class="string">'Lisi'</span>&#125;, &#123;<span class="variable">$inc:</span> &#123;age: <span class="number">50</span>&#125;&#125;, false, true);</span><br><span class="line"><span class="comment"># 等于SQL：update users set age = age + 50 where name = 'Lisi';</span></span><br><span class="line"></span><br><span class="line">db.users.update(&#123;name: <span class="string">'Lisi'</span>&#125;, &#123;<span class="variable">$inc:</span> &#123;age: <span class="number">50</span>&#125;, <span class="variable">$set:</span> &#123;name: <span class="string">'hoho'</span>&#125;&#125;, false, true);</span><br><span class="line"><span class="comment"># 等于SQL：update users set age = age + 50, name = 'hoho' where name = 'Lisi';</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 users 表里面 login == lxk 修改  email 字段为后面的那个值，false 表示如果不存在就不插入新数据；true 代表查询修改所有符合条件的数据：</span></span><br><span class="line">db.getCollection(<span class="string">'users'</span>).update(&#123;<span class="string">"login"</span> : <span class="string">"lxk"</span>&#125;, &#123;<span class="variable">$set:</span> &#123;<span class="string">"email"</span>: <span class="string">'sk@123.com'</span>&#125;&#125;, false, true);</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>这里``表示一个集合（相当于MySQL的表）。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询所有记录，默认每页20条记录，输入 it 查看下一页：</span></span><br><span class="line">db.&lt;foo&gt;.find();</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉集合中 name 列的重复数据</span></span><br><span class="line">db.&lt;foo&gt;.distinct(<span class="string">"name"</span>);</span><br><span class="line"><span class="comment"># 等于SQL：select distict name from &lt;foo&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 id = 22 的记录</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;<span class="string">"id"</span>: <span class="number">22</span>&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where id = 22;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 age &gt; 22 的记录</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$gt:</span> <span class="number">22</span>&#125;&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where age &gt; 22;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 age &lt; 22 的记录</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$lt:</span> <span class="number">22</span>&#125;&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where age &lt; 22;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 age &gt;= 25 的记录</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$gte:</span> <span class="number">25</span>&#125;&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where age &gt;= 25;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 age &lt;= 25 的记录</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$lte:</span> <span class="number">25</span>&#125;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 age &gt;= 23 并且 age &lt;= 26</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$gte:</span> <span class="number">23</span>, <span class="variable">$lte:</span> <span class="number">26</span>&#125;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 name 中包含 mongo 的数据</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;name: /mongo/&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where name like '%mongo%';</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 name 中以 mongo 开头的</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;name: /^mongo/&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where name like 'mongo%';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询指定列 name、age 数据</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;&#125;, &#123;name: <span class="number">1</span>, age: <span class="number">1</span>&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select name, age from &lt;foo&gt;;</span></span><br><span class="line"><span class="comment"># 这里 1 可以写成 true，如果写成 false 表示排除此列</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询指定列 name、age 数据, age &gt; 25</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$gt:</span> <span class="number">25</span>&#125;&#125;, &#123;name: <span class="number">1</span>, age: <span class="number">1</span>&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select name, age from &lt;foo&gt; where age &gt; 25;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照年龄排序</span></span><br><span class="line">db.&lt;foo&gt;.find().sort(&#123;age: <span class="number">1</span>&#125;);    <span class="comment"># 升序</span></span><br><span class="line">db.&lt;foo&gt;.find().sort(&#123;age: <span class="literal">-1</span>&#125;);   <span class="comment"># 降序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 name = zhangsan, age = 22 的数据</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;name: <span class="string">'zhangsan'</span>, age: <span class="number">22</span>&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where name = 'zhangsan' and age = '22';</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询前5条数据</span></span><br><span class="line">db.&lt;foo&gt;.find().limit(<span class="number">5</span>);</span><br><span class="line"><span class="comment"># 等于SQL：select top 5 * from &lt;foo&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询10条以后的数据</span></span><br><span class="line">db.&lt;foo&gt;.find().skip(<span class="number">10</span>);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where id not in (select top 10 * from &lt;foo&gt;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询在 5-10 之间的数据</span></span><br><span class="line">db.&lt;foo&gt;.find().limit(<span class="number">10</span>).skip(<span class="number">5</span>);</span><br><span class="line"><span class="comment"># 可用于分页，limit 是 pageSize，skip 是第几页 pageSize</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or查询</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;<span class="variable">$or:</span> [&#123;<span class="type">age</span>: <span class="number">22</span>&#125;, &#123;<span class="type">age</span>: <span class="number">25</span>&#125;]&#125;);</span><br><span class="line"><span class="comment"># 等于SQL：select * from &lt;foo&gt; where age = 22 or age = 25;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询第一条数据</span></span><br><span class="line">db.&lt;foo&gt;.findOne();</span><br><span class="line">db.&lt;foo&gt;.find().limit(<span class="number">1</span>);</span><br><span class="line"><span class="comment"># 等于SQL：selecttop 1 * from &lt;foo&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询某个结果集的记录条数</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;age: &#123;<span class="variable">$gte:</span> <span class="number">25</span>&#125;&#125;).count();</span><br><span class="line"><span class="comment"># 等于SQL：select count(*) from &lt;foo&gt; where age &gt;= 20;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要返回限制之后的记录数量，要使用 count(true) 或 count(非0) </span></span><br><span class="line">db.users.find().skip(<span class="number">10</span>).limit(<span class="number">5</span>).count(true);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照某列进行排序</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;sex: &#123;<span class="variable">$exists:</span> true&#125;&#125;).count();</span><br><span class="line"><span class="comment"># 等于SQL：select count(sex) from &lt;foo&gt;;</span></span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.remove(&#123;age: <span class="number">132</span>&#125;);</span><br></pre></td></tr></table></figure><p>查询修改删除：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">db.users.findAndModify(&#123;</span><br><span class="line">    query: &#123;age: &#123;<span class="variable">$gte:</span> <span class="number">25</span>&#125;&#125;,</span><br><span class="line">    sort: &#123;age: <span class="literal">-1</span>&#125;,</span><br><span class="line">    update: &#123;<span class="variable">$set:</span> &#123;name: <span class="string">'a2'</span>&#125;, <span class="variable">$inc:</span> &#123;age: <span class="number">2</span>&#125;&#125;,</span><br><span class="line">    remove: true</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">db.runCommand(&#123; findandmodify : <span class="string">"users"</span>,</span><br><span class="line">    query: &#123;age: &#123;<span class="variable">$gte:</span> <span class="number">25</span>&#125;&#125;,</span><br><span class="line">    sort: &#123;age: <span class="literal">-1</span>&#125;,</span><br><span class="line">    update: &#123;<span class="variable">$set:</span> &#123;name: <span class="string">'a2'</span>&#125;, <span class="variable">$inc:</span> &#123;age: <span class="number">2</span>&#125;&#125;,</span><br><span class="line">    remove: true</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;增加&quot;&gt;&lt;a href=&quot;#增加&quot; class=&quot;headerlink&quot; title=&quot;增加&quot;&gt;&lt;/a&gt;增加&lt;/h3&gt;&lt;p&gt;在user集合添加数据，添加的数据的数据列，没有固定，根据添加的数据为准：&lt;/p&gt;
&lt;figure class=&quot;highlight pow</summary>
      
    
    
    
    <category term="后端" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="MongoDB" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/MongoDB/"/>
    
    
    <category term="数据库" scheme="https://liweipeng88.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 数据库基本操作命令</title>
    <link href="https://liweipeng88.github.io/2020/02/12/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://liweipeng88.github.io/2020/02/12/MongoDB%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-02-11T16:00:00.000Z</published>
    <updated>2020-07-22T01:42:53.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show dbs;          <span class="comment"># 查看数据库列表</span></span><br><span class="line">show collections;  <span class="comment"># 查看当前数据库中的集合（理解为MySQL中的表）</span></span><br><span class="line">show tables;       <span class="comment"># 同上</span></span><br><span class="line">show users;        <span class="comment"># 查看用户</span></span><br></pre></td></tr></table></figure><h2 id="数据库相关操作"><a href="#数据库相关操作" class="headerlink" title="数据库相关操作"></a>数据库相关操作</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use &lt;dbName&gt;;           <span class="comment"># 进入到 &lt;dbName&gt; 库，不存在则创建 </span></span><br><span class="line">db;                     <span class="comment"># 查看当前所在库名</span></span><br><span class="line">db.help();              <span class="comment"># 数据库命令帮助</span></span><br><span class="line">db.dropDatabase();      <span class="comment"># 删除当前所在的库</span></span><br><span class="line">db.stats();             <span class="comment"># 当前库状态</span></span><br><span class="line">db.repairDatabase();    <span class="comment"># 修复当前数据库</span></span><br><span class="line">db.getMongo();          <span class="comment"># 查看当前db的链接机器地址</span></span><br><span class="line"></span><br><span class="line">db.printCollectionStats();                      <span class="comment"># 显示当前db所有聚集索引的状态</span></span><br><span class="line">db.cloneDatabase(<span class="string">"10.0.0.1"</span>);                   <span class="comment"># 克隆 10.0.0.1 的库到本机</span></span><br><span class="line">db.copyDatabase(<span class="string">"db1"</span>, <span class="string">"db2"</span>, <span class="string">"127.0.0.1"</span>);     <span class="comment"># 将本机 db1 库复制到 bd2 库中</span></span><br></pre></td></tr></table></figure><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><p>集合操作需先进入库中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">db.&lt;foo&gt;.help();                        <span class="comment"># 显示 &lt;foo&gt; 集合操作命令</span></span><br><span class="line">db.&lt;foo&gt;.find();                        <span class="comment"># 对于当前数据库中的 &lt;foo&gt; 集合进行数据查找</span></span><br><span class="line">db.getCollection(<span class="string">"&lt;foo&gt;"</span>).find(&#123;&#125;);     <span class="comment"># 同上</span></span><br><span class="line">db.&lt;foo&gt;.find(&#123;id:<span class="number">10</span>&#125;);                 <span class="comment"># 在 &lt;foo&gt; 集合中查找，条件是 id 等于 10</span></span><br><span class="line">db.createCollection(<span class="string">'user'</span>);            <span class="comment"># 创建一个 user 集合</span></span><br><span class="line"></span><br><span class="line">db.&lt;foo&gt;.count();          <span class="comment"># 查询当前集合的数据条数</span></span><br><span class="line">db.&lt;foo&gt;.dataSize();       <span class="comment"># 查看数据空间大小</span></span><br><span class="line">db.&lt;foo&gt;.getDB();          <span class="comment"># 查看集合所在的库</span></span><br><span class="line">db.&lt;foo&gt;.stats();          <span class="comment"># 查看集合的状态</span></span><br><span class="line">db.&lt;foo&gt;.totalSize();      <span class="comment"># 集合总大小 </span></span><br><span class="line">db.&lt;foo&gt;.storageSize();    <span class="comment"># 集合储存空间大小</span></span><br><span class="line">db.&lt;foo&gt;.drop();           <span class="comment"># 删除集合</span></span><br><span class="line"></span><br><span class="line">db.&lt;foo&gt;.getShardVersion();                  <span class="comment"># Shard版本信息</span></span><br><span class="line">db.&lt;foo<span class="literal">-1</span>&gt;.renameCollection(<span class="string">"&lt;foo-2&gt;"</span>);      <span class="comment"># 聚集集合重命名</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h2&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    <category term="后端" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="MongoDB" scheme="https://liweipeng88.github.io/categories/%E5%90%8E%E7%AB%AF/MongoDB/"/>
    
    
    <category term="数据库" scheme="https://liweipeng88.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli3项目搭建配置以及性能优化</title>
    <link href="https://liweipeng88.github.io/2020/02/11/vue3.0%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>https://liweipeng88.github.io/2020/02/11/vue3.0%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE/</id>
    <published>2020-02-10T16:00:00.000Z</published>
    <updated>2020-07-10T08:54:08.607Z</updated>
    
    <content type="html"><![CDATA[<p><strong>项目初始化</strong></p><p>注意：安装前请确保有安装node.js，并且node&gt;=8.9</p><p>全局安装vue　</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue&#x2F;cli</span><br></pre></td></tr></table></figure><p>如果之前安装了vue旧版本，查看vue –version</p><p>创建项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create vue-cli3-init(项目名)</span><br></pre></td></tr></table></figure><p>注：名称不能采用驼峰</p><p>vue-cli3也可以采用UI面板进行配置，相对比较方便，目前先写命令行创建，后续再加上面板创建。</p><p>选择配置，默认配置还是手动，这里我选择手动Manually，继续回车会让你选择你想要功能。 （不用用git窗口，选择不了选项，可以使用<strong>上下方向</strong>来切换选项）</p><p>此处有两个选择：</p><ul><li>default (babel, eslint) 默认套餐，提供 babel 和 eslint 支持。</li><li>Manually select features 自己去选择需要的功能，提供更多的特性选择。比如如果想要支持 TypeScript，就应该选择这一项。</li></ul><p><img src="C:%5CUsers%5CLIZARD%5CDesktop%5Cmyblog%5Csource%5Cimages%5CSnipaste_2020-07-10_16-50-12.png" alt=""></p><p>回车后可进行选择，8个功能特性，可以多选： 使用方向键在特性选项之间切换，使用空格键选中当前特性，使用 a 键切换选择所有，使用 i 键翻转选项。我的选择如下，请根据自己需要进行选择。</p><p>对于每一项的功能，此处做个简单描述：</p><ul><li><strong>TypeScript</strong> 支持使用 TypeScript 书写源码。</li><li><strong>Progressive Web App (PWA) Support PWA</strong> 支持。</li><li><strong>Router</strong> 支持 vue-router 。</li><li><strong>Vuex</strong> 支持 vuex 。</li><li><strong>CSS Pre-processors</strong> 支持 CSS 预处理器。</li><li><strong>Linter / Formatter</strong> 支持代码风格检查和格式化。</li><li><strong>Unit Testing</strong> 支持单元测试。</li><li><strong>E2E Testing</strong> 支持 E2E 测试。</li></ul><p><img src="C:%5CUsers%5CLIZARD%5CDesktop%5Cmyblog%5Csource%5Cimages%5CSnipaste_2020-07-10_16-50-33.png" alt=""></p><p>是否选择history模式，根据自己需要选择。</p><p><img src="C:%5CUsers%5CLIZARD%5CDesktop%5Cmyblog%5Csource%5Cimages%5CSnipaste_2020-07-10_16-50-43.png" alt=""></p><p>是否选择预语言，根据自己需要选择。</p><p><img src="https://user-gold-cdn.xitu.io/2019/3/24/169aec9f0fb7278d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p> 是否ESlint输出，根据自己需要选择。</p><p><img src="https://user-gold-cdn.xitu.io/2019/3/24/169aeca9b658e703?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>是否保存时或者提交时是进行ESlint校验，根据自己需要选择。</p><p><img src="https://user-gold-cdn.xitu.io/2019/3/24/169aecb8a5e09850?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>选择把配置文件放在外面，选择 In dedicated config files</p><p><img src="https://user-gold-cdn.xitu.io/2019/3/24/169aeccfdbe1eef6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>要不要把当前的这一系列选项配置保存起来，方便下一次创建项目时复用。</p><p><img src="https://user-gold-cdn.xitu.io/2019/3/24/169aed0638141ad7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>项目初始化完成，进入项目:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd vue-cli3-init</span><br><span class="line">依赖安装完成之后启动项目：</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2019/3/24/169aedb8b6d4a07c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p><strong>修改目录结构</strong></p><p>用编辑器打开后可以看到目录结构。相对于vue-cli2精简了很多，减少了对webpack的配置。 </p><p><img src="https://upload-images.jianshu.io/upload_images/14483412-05dadc2fc3b24a64" alt="img"></p><ul><li><p>node_modules 文件夹 项目依赖(对webpack进行了封装)</p></li><li><p>public 文件夹</p><p>1.favicon.ico 是 网站图标</p><p>2.index.html 页面入口文件</p></li><li><p>src 文件夹</p><p>main.js 入口js</p><p>assets 存放静态文件</p><p>components 存放公用组件</p><p>App.vue 入口vue文件</p></li><li><p>.eslintrc.js 配置</p></li><li><p>.gitignore 指定文件无需提交到git上</p></li><li><p>balel.config.js 使用一些预设</p></li><li><p>package.json 项目描述及依赖</p></li><li><p>package-lock.json 版本管理使用的文件</p></li></ul><p>由于现在的目录结构不利于后期的开发，现在我们增加部分文件，待后续可以进行功能扩展。在src文件下：新建api文件夹，config文件夹,router文件夹，utils文件夹，views文件夹，store文件夹。并在其文件下建子目录，详细请参考目录截图：</p><p><img src="https://img2018.cnblogs.com/i-beta/1452252/201912/1452252-20191209095942383-537773899.png" alt="img"> </p><p><strong>多环境运行</strong></p><p>由于我们的项目需要在不同环境下进行运行(开发，生产，测试等)，这避免我们需要多次的去切换请求的地址以及相关的配置，vue-cli2是可以直接在config文件中进行配置的，但是vue-cli3已经简化了，官方文档也有进行配置的说明，实现具体有以下2种方法，我比较偏向第二种。</p><p><em>第一种实现方法</em></p><p>1.在根目录新建2个文件，分别为<code>.env.development</code>，<code>.env.production</code>，<code>.env.test</code>。注意文件是只有后缀的。</p><p><code>.env.development</code> 模式用于serve，开发环境，就是开始环境的时候会引用这个文件里面的配置</p><p><code>.env.production</code>模式用于build，线上环境。</p><p><code>.env.test</code> 测试环境</p><p>2.分别在文件内写上：</p><p>开发环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;.env.development </span><br><span class="line">VUE_APP_BASE_API &#x3D; &#39;需要请求API&#39;</span><br></pre></td></tr></table></figure><p>线上环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;.env.production</span><br><span class="line">VUE_APP_BASE_API &#x3D; &#39;需要请求API&#39;</span><br></pre></td></tr></table></figure><p>测试环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;.env.test</span><br><span class="line">VUE_APP_BASE_API &#x3D; &#39;需要请求API&#39;</span><br></pre></td></tr></table></figure><p>当需要用到该变量是可以用<code>process.env.VUE_APP_BASE_API</code>进行取值。</p><p>3.更改package.json文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;dev&quot;: &quot;vue-cli-service serve&quot;,</span><br><span class="line">    &quot;test&quot;: &quot;vue-cli-service serve --mode test&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;vue-cli-service build&quot;,</span><br><span class="line">    &quot;build:test&quot;: &quot;vue-cli-service build --mode test&quot;,</span><br><span class="line">    &quot;lint&quot;: &quot;vue-cli-service lint&quot;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><em>第二种实现方式</em></p><p>1.在config文件新建index.js文件，根据全局的环境变量来进行判断，并进行输出。代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 一些全局的config配置</span><br><span class="line">const modeUrlObj &#x3D; &#123;</span><br><span class="line">  &#x2F;&#x2F; 生产环境</span><br><span class="line">  &#39;production&#39;: &#123;</span><br><span class="line">    baseURL: &#39;http:&#x2F;&#x2F;xxx:9091&#x2F;pro&#x2F;&#39;,</span><br><span class="line">    authBaseURL: &#39;&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 开发环境</span><br><span class="line">  &#39;development&#39;: &#123;</span><br><span class="line">    baseURL: &#39;http:&#x2F;&#x2F;xxxx:9091&#x2F;dev&#x2F;&#39;,</span><br><span class="line">    authBaseURL: &#39;&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 测试环境</span><br><span class="line">  &#39;test&#39;: &#123;</span><br><span class="line">    baseURL: &#39;http:&#x2F;&#x2F;xxxx:9091&#x2F;test&#x2F;&#39;,</span><br><span class="line">    authBaseURL: &#39;&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default modeUrlObj[process.env.NODE_ENV]</span><br></pre></td></tr></table></figure><p>2.更改package.json文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;dev&quot;: &quot;vue-cli-service serve&quot;,</span><br><span class="line">    &quot;test&quot;: &quot;vue-cli-service serve --mode test&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;vue-cli-service build&quot;,</span><br><span class="line">    &quot;build:test&quot;: &quot;vue-cli-service build --mode test&quot;,</span><br><span class="line">    &quot;lint&quot;: &quot;vue-cli-service lint&quot;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>3.引用的方法可以参照如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import config from &#39;..&#x2F;config&#x2F;index&#39; &#x2F;&#x2F; 路径配置</span><br><span class="line">config.baseURL  &#x2F;&#x2F; 对应环境api</span><br></pre></td></tr></table></figure><p>4.运行命令行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm run dev &#x2F;&#x2F; 开发环境</span><br><span class="line">npm run test &#x2F;&#x2F; 测试环境</span><br><span class="line">npm run build &#x2F;&#x2F; 正式环境打包</span><br><span class="line">npm run build:test &#x2F;&#x2F; 测试环境打包</span><br></pre></td></tr></table></figure><p><strong>axios封装</strong></p><p>在vue项目中，和后台交互获取数据这块，我们通常使用的是axios库，它是基于promise的http库，可运行在浏览器端和node.js中。他有很多优秀的特性，例如拦截请求和响应、取消请求、转换json、客户端防御XSRF等。所以我们的尤大大也是果断放弃了对其官方库vue-resource的维护，直接推荐我们使用axios库。如果还对axios不了解的，可以移步<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.kancloud.cn%2Fyunye%2Faxios%2F234845" target="_blank" rel="noopener">axios文档</a>。</p><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save; &#x2F;&#x2F; 安装axios</span><br></pre></td></tr></table></figure><p>配置axios</p><p>在uitls文件下新增request.js文件，在这里我们对axios进行初始化后，暴露给需要引用的文件，方便开发。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">import config from &#39;..&#x2F;config&#x2F;index&#39; &#x2F;&#x2F; 路径配置</span><br></pre></td></tr></table></figure><p>创建axios实例，并进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 创建axios 实例</span><br><span class="line">const service &#x3D; axios.create(&#123;</span><br><span class="line">    baseURL: config.baseURL, &#x2F;&#x2F; api的base_url</span><br><span class="line">    timeout: 10000 &#x2F;&#x2F; 请求超时时间</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>利用axios的请求拦截和响应拦截可以对登录和权限方面进行控制，具体需求可以自己进行配置。完整代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">import config from &#39;..&#x2F;config&#x2F;index&#39; &#x2F;&#x2F; 路径配置</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建axios 实例</span><br><span class="line">const service &#x3D; axios.create(&#123;</span><br><span class="line">    baseURL: config.baseURL, &#x2F;&#x2F; api的base_url</span><br><span class="line">    timeout: 10000 &#x2F;&#x2F; 请求超时时间</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; request 拦截器</span><br><span class="line">service.interceptors.request.use(</span><br><span class="line">    config &#x3D;&gt; &#123;</span><br><span class="line">        &#x2F;&#x2F; 这里可以自定义一些config 配置</span><br><span class="line"></span><br><span class="line">        return config</span><br><span class="line">    &#125;,</span><br><span class="line">    error &#x3D;&gt; &#123;</span><br><span class="line">        &#x2F;&#x2F;  这里处理一些请求出错的情况</span><br><span class="line"></span><br><span class="line">        Promise.reject(error)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; response 拦截器</span><br><span class="line">service.interceptors.response.use(</span><br><span class="line">    response &#x3D;&gt; &#123;</span><br><span class="line">        const res &#x3D; response.data</span><br><span class="line">        &#x2F;&#x2F; 这里处理一些response 正常放回时的逻辑</span><br><span class="line"></span><br><span class="line">        return res</span><br><span class="line">    &#125;,</span><br><span class="line">    error &#x3D;&gt; &#123;</span><br><span class="line">        &#x2F;&#x2F; 这里处理一些response 出错时的逻辑</span><br><span class="line"></span><br><span class="line">        return Promise.reject(error)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">export default service</span><br></pre></td></tr></table></figure><p>api请求配置</p><p>在api文件下新建分类的api请求文件。根据具体需要分类。主要是方便团队开发，容易归类。可以参考下面配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import request from &#39;@&#x2F;utils&#x2F;request&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F; 登录</span><br><span class="line">  login (data) &#123;</span><br><span class="line">    return request(&#123;</span><br><span class="line">      url: &#39;&#x2F;login&#39;,</span><br><span class="line">      method: &#39;post&#39;,</span><br><span class="line">      data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 获取用户信息</span><br><span class="line">  getUserInfo () &#123;</span><br><span class="line">    return request(&#123;</span><br><span class="line">      url: &#39;&#x2F;userinfo&#39;,</span><br><span class="line">      method: &#39;get&#39;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>业务中需要进行请求可以用import后，进行传参即可。 </p><h3 id="模块化vuex"><a href="#模块化vuex" class="headerlink" title="模块化vuex"></a><strong>模块化vuex</strong></h3><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p><p>如果对vuex还不大了解的可以自行<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fvuex.vuejs.org%2Fzh%2Fguide%2F" target="_blank" rel="noopener">阅读vuex官方文档</a>。</p><p>安装vuex</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex -S</span><br></pre></td></tr></table></figure><p>新建目录</p><p>modules文件主要用法存放分类的文件，可以进行区分，getters文件是对state进行处理，index.js主要进行一些引入，初始化操作。 </p><p><img src="https://upload-images.jianshu.io/upload_images/14483412-26d1cace7784776d" alt="img"></p><p>书写vuex配置</p><p>index.js文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import Vuex from &#39;vuex&#39;</span><br><span class="line">import user from &#39;.&#x2F;modules&#x2F;user&#39; &#x2F;&#x2F; 引入各个模块的代码</span><br><span class="line">import getters from &#39;.&#x2F;getters&#39;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line">const store &#x3D; new Vuex.Store(&#123;</span><br><span class="line">    modules: &#123;</span><br><span class="line">        user</span><br><span class="line">    &#125;,</span><br><span class="line">    getters</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">export default store</span><br></pre></td></tr></table></figure><p>getter.js文件</p><p>getter中的配置可根据需求进行增加或者删除，下面是示例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const getters &#x3D; &#123;</span><br><span class="line">  requestLoading: state &#x3D;&gt; state.app.requestLoading,</span><br><span class="line">  size: state &#x3D;&gt; state.app.size,</span><br><span class="line">  token: state &#x3D;&gt; state.user.token,</span><br><span class="line">  avatar: state &#x3D;&gt; state.user.avatar,</span><br><span class="line">  name: state &#x3D;&gt; state.user.name,</span><br><span class="line">  roles: state &#x3D;&gt; state.user.roles</span><br><span class="line">&#125;</span><br><span class="line">export default getters</span><br></pre></td></tr></table></figure><p>moduels/user.js文件</p><p>该文件为与业务相关，可以跟据具体参见进行增加和删除命名。每个文件的基本配置和用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import &#123; getToken, setToken &#125; from &#39;@&#x2F;utils&#x2F;auth&#39;</span><br><span class="line">import api from &#39;@&#x2F;api&#x2F;user&#39;</span><br><span class="line"></span><br><span class="line">const user &#x3D; &#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    token: getToken(),</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_TOKEN: (state, token) &#x3D;&gt; &#123;</span><br><span class="line">      state.token &#x3D; token</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  actions: &#123;</span><br><span class="line">    &#x2F;&#x2F; 登录</span><br><span class="line">    Login (&#123; commit &#125;, userInfo) &#123;</span><br><span class="line">      return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">        api.login(userInfo).then(res &#x3D;&gt; &#123;</span><br><span class="line">          if (res.code &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">            setToken(res.data)</span><br><span class="line">            commit(&#39;SET_TOKEN&#39;, res.data)</span><br><span class="line">          &#125;</span><br><span class="line">          resolve()</span><br><span class="line">        &#125;).catch(err &#x3D;&gt; &#123;</span><br><span class="line">          reject(err)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default user</span><br></pre></td></tr></table></figure><h3 id="全局样式引用"><a href="#全局样式引用" class="headerlink" title="全局样式引用"></a><strong>全局样式引用</strong></h3><p>在项目开发过程中，我们经常需要全局样式引用，例如主题色等，如果每次去写的化会变得很麻烦。因为我们应该了sass预语言编译，所以可以大胆的应用其特性。例如变量，函数，混入等。但是我们需要在项目中进行全局的配置才能有效果。不用在每一个页面都进行引入样式，就能直接引用。</p><p>新建目录</p><p>在assets下新建如下文件，具体的代码自行进行配置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* <span class="selector-tag">common</span><span class="selector-class">.scss</span> 主要存放公共的样式</span><br><span class="line">* <span class="selector-tag">mixin</span><span class="selector-class">.scss</span> 存放混入样式</span><br><span class="line">* <span class="selector-tag">reset</span><span class="selector-class">.scss</span> 存放重置样式。</span><br><span class="line">* <span class="selector-tag">variable</span><span class="selector-class">.scss</span> 存放变量</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/14483412-e3a294443bed045b" alt="img"></p><p>全局引入</p><p>新建vue.config.js文件，并写上以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      &#x2F;&#x2F; pass options to sass-loader</span><br><span class="line">      sass: &#123;</span><br><span class="line">        &#x2F;&#x2F; @&#x2F; is an alias to src&#x2F;</span><br><span class="line">        &#x2F;&#x2F; so this assumes you have a file named &#96;src&#x2F;variables.scss&#96;</span><br><span class="line">        data: &#96;</span><br><span class="line">               @import &quot;@&#x2F;assets&#x2F;css&#x2F;variable.scss&quot;; </span><br><span class="line">               @import &quot;@&#x2F;assets&#x2F;css&#x2F;common.scss&quot;;</span><br><span class="line">               @import &quot;@&#x2F;assets&#x2F;css&#x2F;mixin.scss&quot;;</span><br><span class="line">              &#96;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在app.vue中引入reset.scss文件，完成后，样式即可进行全局调用了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang&#x3D;&quot;scss&quot;&gt;</span><br><span class="line">  @import &quot;assets&#x2F;css&#x2F;reset&quot;;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="移动端适配配置"><a href="#移动端适配配置" class="headerlink" title="移动端适配配置"></a>移动端适配配置</h3><p>在本项目中主要用rem来进行页面的适配操作的，因为rem就可以随根字体大小改变而改变，从而实现了自适应的功能。但是html的字体是固定的，所以需要监听页面大小的变化，我主要用了淘宝的<code>amfe-flexible</code>来进行监听改变的。将项目中css的px转成rem单位，免去计算烦恼,我们可以用scss来进行计算或者利用<code>px2rem</code>插件来进行自动转化。因为是开发移动端，需把mate换为<br>``<br>实现方法如下：</p><p>安装amfe-flexible</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i amfe-flexible --save</span><br></pre></td></tr></table></figure><p>px转rem</p><p>方法一：</p><p>在common.scss文件中，全局引入scss函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">  转化px为rem。$base-font-size &#x3D; 设计稿尺寸&#x2F;10</span><br><span class="line">*&#x2F;</span><br><span class="line">@function px2rem($px, $base-font-size: 37.5) &#123;</span><br><span class="line">  @return ($px&#x2F;$base-font-size)*1rem</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方式直接： <code>width: px2rem(175);</code></p><p>方法二：</p><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i postcss-pxtorem --save-dev</span><br></pre></td></tr></table></figure><p>package.json内，在postcss内添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;postcss&quot;: &#123;</span><br><span class="line">   &quot;plugins&quot;: &#123;</span><br><span class="line">     &quot;autoprefixer&quot;: &#123;&#125;,</span><br><span class="line">     &quot;postcss-pxtorem&quot;: &#123;</span><br><span class="line">       &quot;rootValue&quot;: 75, &#x2F;&#x2F; 设计稿宽度的1&#x2F;10,（JSON文件中不加注释，此行注释及下行注释均删除）</span><br><span class="line">       &quot;propList&quot;:[&quot;*&quot;] &#x2F;&#x2F; 需要做转化处理的属性，如&#96;hight&#96;、&#96;width&#96;、&#96;margin&#96;等，&#96;*&#96;表示全部</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h3 id="常用util"><a href="#常用util" class="headerlink" title="常用util"></a>常用util</h3><p>该文件主要是对一些常用的js进行封装，例如时间格式化，LocalStorage操作等，相对比较常用的方法，这个文件可以进行保存，要用到时直接复制过来用即可。下面是我封装LocalStorage的文件，可参考以下，其他自行设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import Cookies from &#39;js-cookie&#39;</span><br><span class="line"></span><br><span class="line">const TokenKey &#x3D; &#39;Authorization&#39;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 设置setLocalStorage</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function setLocalStorage (key, value) &#123;</span><br><span class="line">    window.localStorage.setItem(key, window.JSON.stringify(value))</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 获取getLocalStorage</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function getLocalStorage (key) &#123;</span><br><span class="line">    return window.JSON.parse(window.localStorage.getItem(key) || &#39;[]&#39;)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 设置setSessionStorage</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function setSessionStorage (key, value) &#123;</span><br><span class="line">    window.sessionStorage.setItem(key, window.JSON.stringify(value))</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 获取getSessionStorage</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function getSessionStorage (key) &#123;</span><br><span class="line">    return window.JSON.parse(window.sessionStorage.getItem(key) || &#39;[]&#39;)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 获取getToken</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function getToken () &#123;</span><br><span class="line">    return Cookies.get(TokenKey)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 设置setToken</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function setToken (token) &#123;</span><br><span class="line">    return Cookies.set(TokenKey, token)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">* 移除removeToken</span><br><span class="line">* *&#x2F;</span><br><span class="line">export function removeToken () &#123;</span><br><span class="line">    return Cookies.remove(TokenKey)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>引入第三方UI框架(elementUI)</strong></p><p>\1. 打开控制台，执行vue add element命令，为项目安装element。</p><p>　<img src="https://img2018.cnblogs.com/blog/1328957/201907/1328957-20190702171230720-1345556025.png" alt="img"></p><p> 2.等待其安装完毕，在设置向导中配置引入方式和加载地区。</p><p>　<img src="https://img2018.cnblogs.com/blog/1328957/201907/1328957-20190702171320297-430731625.png" alt="img"></p><p>3.在自动安装完依赖后，可以看到相关的文件已经被创建/更新了。</p><p> <img src="https://img2018.cnblogs.com/blog/1328957/201907/1328957-20190702172826995-792527375.png" alt="img"></p><p>4.如果需要按需引入，则去到src目录下自动新建的plugins目录，编辑element.js即可，默认会导入一个Button。这么做的好处是不用把引入的ele组件写在main.js文件下，使各模块更加分离。</p><p>　<img src="https://img2018.cnblogs.com/blog/1328957/201907/1328957-20190702172936514-1243904540.png" alt="img"></p><h3 id="配置vue-config-js文件"><a href="#配置vue-config-js文件" class="headerlink" title="配置vue.config.js文件"></a>配置vue.config.js文件</h3><p>基本配置</p><p>1.文件目录配置别名<br>我们可以把src配置为@，如果需要就不用到根目录开始写了，直接用@/xxx/进行引用。根据自己需要进行配置，在vue.config.js文件中加入代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 配置</span><br><span class="line">chainWebpack: (config)&#x3D;&gt;&#123;</span><br><span class="line">&#x2F;&#x2F; 配置别名</span><br><span class="line">config.resolve.alias</span><br><span class="line">    .set(&#39;@&#39;, resolve(&#39;src&#39;))</span><br><span class="line">    .set(&#39;assets&#39;,resolve(&#39;src&#x2F;assets&#39;))</span><br><span class="line">    .set(&#39;components&#39;,resolve(&#39;src&#x2F;components&#39;))</span><br><span class="line">    .set(&#39;router&#39;,resolve(&#39;src&#x2F;router&#39;))</span><br><span class="line">    .set(&#39;utils&#39;,resolve(&#39;src&#x2F;utils&#39;))</span><br><span class="line">    .set(&#39;static&#39;,resolve(&#39;src&#x2F;static&#39;))</span><br><span class="line">    .set(&#39;store&#39;,resolve(&#39;src&#x2F;store&#39;))</span><br><span class="line">    .set(&#39;views&#39;,resolve(&#39;src&#x2F;views&#39;))</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.跨域配置<br>在前端请求过程中，如果后台没有设置跨域请求的，可以在webpack进行配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">proxy: &#123;</span><br><span class="line">  &#39;&#x2F;api&#39;: &#123;</span><br><span class="line">    target: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#39;,</span><br><span class="line">    changeOrigin: true</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.其他配置</p><p>具体可以参照官网的配置说明，在项目中我用到了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">assetsDir: &#39;assets&#39;,   &#x2F;&#x2F; 静态文件目录</span><br><span class="line">publicPath: &#39;.&#x2F;&#39;,    &#x2F;&#x2F; 编译后的地址，可以根据环境进行设置</span><br><span class="line">lintOnSave: true, &#x2F;&#x2F; 是否开启编译时是否不符合eslint提示</span><br></pre></td></tr></table></figure><p>以上的所有代码必须写在<code>module.exports</code>输出才能生效. 详细的配置可参考官网 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fcli.vuejs.org%2Fzh%2Fguide%2F%23%E8%AF%A5%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener">vue-cli3</a></p><h3 id="项目框架性能优化-v1-mint-ui分支"><a href="#项目框架性能优化-v1-mint-ui分支" class="headerlink" title="项目框架性能优化 (v1_mint_ui分支)"></a>项目框架性能优化 (v1_mint_ui分支)</h3><p>通过以上的基本配置，项目已经符合我们工作需要了，但是在工作过程中会发现随着项目的集成度越来越高，业务越来越多。出现了加载慢和打包文件过大的问题。导致我们页面白屏时间过长，用户体验不友好。那么如果你感兴趣的话，可以进行以下的配置，可以大大大大大的减小体积和加载速度。在master分支是没有进行优化的，如果需要看优化代码可以到另外一个分支。所以在页面引入的代码都是当前页面需要的执行代码，可以往下面几个方法进行处理。</p><ul><li>js,css代码的最小化压缩和分割</li><li>js,css代码公用代码提取, 按需引入(cdn加载)</li><li>图片文件的压缩</li><li>gzip的压缩</li><li>去除console.log</li></ul><p><strong>1.js,css代码的最小化压缩和分割</strong></p><p>首先，我们先对js文件进行配置以达到压缩效果，先看一下没有配置代码情况，整个app.js 的文件是2.8M（因为是初始项目），但是如果页面一多，就不只这个数了。</p><p><img src="https://upload-images.jianshu.io/upload_images/14483412-00f366369b1015ed" alt="img"></p><p>我们会通过chainWebpak来处理. 在优化前, 看下相关文件的响应代码: 看下app.js文件的返回代码:代码如下：</p><p><img src="https://img2018.cnblogs.com/i-beta/1452252/201912/1452252-20191209105732876-1337453018.png" alt="img"> </p><p>在vue.config.js文件中加入,run以下后查看app.js情况，文件会变小（由于初始项目体积小，看不出多大区别）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  chainWebpack: config &#x3D;&gt; &#123;</span><br><span class="line">    config.optimization.minimize(true);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/14483412-c99dd46b53b756e9" alt="img"></p><p><img src="https://img2018.cnblogs.com/i-beta/1452252/201912/1452252-20191209110939524-1694283595.png" alt="img"></p><p>分割代码,相应的文件中存入分割后的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    </span><br><span class="line">    chainWebpack: config &#x3D;&gt; &#123;</span><br><span class="line">        config.optimization.minimize(true);</span><br><span class="line">        config.optimization.splitChunks(&#123;</span><br><span class="line">          chunks: &#39;all&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/14483412-b13a7b83fab8c1bc" alt="img"></p><p>加入以上代码后，分成了2个文件，最大的只有2.7M了，这样可以分成多个进行加载，可以达到最快化，但是一定要平衡文件大小的和分割出来的文件数量的平衡, 数量多了, 请求也会变慢的, 影响性能.可以根据项目的进行设置，具体可参考官方文档的详细说明。</p><p><strong>2.js,css代码公用代码提取, 按需引入(<code>CDN加载</code>)</strong></p><p>把公用代码提取出来,然后采用使用免费的cdn资源进行加载。在项目中我们主要是引入引入不同的模块库才会导致文件较大，那么是否可以把这些文件进一步处理，答案是可以的，比如vue, vuex, vue-router, element-ui等公共资源库。利用webpack我们可以使用externals参数来配置:</p><p>在vue.config.js文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    chainWebpack: config &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F; 压缩代码</span><br><span class="line">    config.optimization.minimize(true);</span><br><span class="line">    &#x2F;&#x2F; 分割代码</span><br><span class="line">    config.optimization.splitChunks(&#123;</span><br><span class="line">      chunks: &#39;all&#39;</span><br><span class="line">    &#125;)</span><br><span class="line">    &#x2F;&#x2F; 用cdn方式引入</span><br><span class="line">    config.externals(&#123;</span><br><span class="line">      &#39;vue&#39;: &#39;Vue&#39;,</span><br><span class="line">      &#39;vuex&#39;: &#39;Vuex&#39;,</span><br><span class="line">      &#39;vue-router&#39;: &#39;VueRouter&#39;,</span><br><span class="line">      &#39;mint-ui&#39;: &#39;MINT&#39;,  &#x2F;&#x2F; 需用MINT</span><br><span class="line">      &#39;axios&#39;: &#39;axios&#39;</span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.html加入CDN地址,注意引入的时候要写在body里面，否则会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.6.10&#x2F;vue.runtime.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue-router&#x2F;3.0.2&#x2F;vue-router.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vuex&#x2F;3.1.0&#x2F;vuex.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;axios&#x2F;0.18.0&#x2F;axios.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;mint-ui&#x2F;2.2.13&#x2F;index.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>mint-ui样式通过CDN引入。然后商储mian.js文件的 import ‘mint-ui/lib/style.css’ （全局引入模式才有）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;mint-ui&#x2F;2.2.13&#x2F;style.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure><p>如果需要引入其他依赖的CDN可以通过<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.bootcdn.cn%2F" target="_blank" rel="noopener">BootCDN查找</a>进行引入。</p><p>重新运行项目, 看看效果，已经大大的减小了很多，到了k级别了： </p><p><img src="https://upload-images.jianshu.io/upload_images/14483412-e695cda10a61db1f" alt="img"></p><p>提取css代码：</p><p>因为js会动态的加载出css，所以js文件包会比较大，那么需要提取css代码到文件. 这里我们只需要将css配置一下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">      extract: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><img src="https://img2018.cnblogs.com/i-beta/1452252/201912/1452252-20191209111148836-1643798091.png" alt="img"></strong></p><p><strong>3.图片文件的压缩</strong></p><p>图片文件大于在webpack设定的值时，我们可以对其进行压缩在进行引入，安利给大家一个压缩图片的网站<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftinypng.com%2F" target="_blank" rel="noopener">https://tinypng.com/</a>，它可以批量的压缩图片又不会失真，压缩比相对较大。可以对图片进行有效压缩。</p><p><strong>4.gzip的压缩</strong></p><p>如果后台有对前端的代码进行gzip压缩的话，那么就不需要进行压缩了，后台自己配置就可以。如果后台不具备这种情况那么我们可以利用compression-webpack-plugin插件可以帮助我们进行gzip压缩：</p><p>安装依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev compression-webpack-plugin</span><br></pre></td></tr></table></figure><p>然后引入相关代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">const CompressionWebpackPlugin &#x3D; require(&#39;compression-webpack-plugin&#39;)</span><br><span class="line"></span><br><span class="line">const compress &#x3D; new CompressionWebpackPlugin(</span><br><span class="line"> &#123;</span><br><span class="line">   filename: info &#x3D;&gt; &#123;</span><br><span class="line">     return &#96;$&#123;info.path&#125;.gz$&#123;info.query&#125;&#96;</span><br><span class="line">   &#125;,</span><br><span class="line">   algorithm: &#39;gzip&#39;, </span><br><span class="line">   threshold: 10240,</span><br><span class="line">   test: new RegExp(</span><br><span class="line">     &#39;\\.(&#39; +</span><br><span class="line">     [&#39;js&#39;].join(&#39;|&#39;) +</span><br><span class="line">     &#39;)$&#39;</span><br><span class="line">   ),</span><br><span class="line">   minRatio: 0.8,</span><br><span class="line">   deleteOriginalAssets: false</span><br><span class="line"> &#125;</span><br><span class="line">)</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">devServer: &#123;</span><br><span class="line"></span><br><span class="line">   before(app, server) &#123; </span><br><span class="line">     app.get(&#x2F;.*.(js)$&#x2F;, (req, res, next) &#x3D;&gt; &#123; </span><br><span class="line">       req.url &#x3D; req.url + &#39;.gz&#39;;</span><br><span class="line">       res.set(&#39;Content-Encoding&#39;, &#39;gzip&#39;);</span><br><span class="line">       next();</span><br><span class="line">     &#125;)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> configureWebpack: &#123;</span><br><span class="line">     plugins: [compress]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>重新run一遍，出现了意向不到的结果了。又原来的2.8M转化为250+kb了，缩小了11倍以上。重大突破</p><p><img src="https://upload-images.jianshu.io/upload_images/14483412-e4ceec7b94cf6c7a" alt="img"></p><p><strong>6.去除console.log</strong></p><p>正常情况下我们会在开发环境进行console调试，但是如果不删除，过多会出现内存泄漏的情况，那么我们可以在正式环境的时候就把它给干掉，实现方法如下：</p><p>方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">const UglifyJsPlugin &#x3D; require(&#39;uglifyjs-webpack-plugin&#39;);</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    configureWebpack: config &#x3D;&gt; &#123;</span><br><span class="line">        if (IS_PROD) &#123;</span><br><span class="line">            const plugins &#x3D; [];</span><br><span class="line">            plugins.push(</span><br><span class="line">                new UglifyJsPlugin(&#123;</span><br><span class="line">                    uglifyOptions: &#123;</span><br><span class="line">                        compress: &#123;</span><br><span class="line">                            warnings: false,</span><br><span class="line">                            drop_console: true,</span><br><span class="line">                            drop_debugger: false,</span><br><span class="line">                            pure_funcs: [&#39;console.log&#39;]&#x2F;&#x2F;移除console</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    sourceMap: false,</span><br><span class="line">                    parallel: true</span><br><span class="line">                &#125;)</span><br><span class="line">            );</span><br><span class="line">            config.plugins &#x3D; [</span><br><span class="line">                ...config.plugins,</span><br><span class="line">                ...plugins</span><br><span class="line">            ];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：使用<code>babel-plugin-transform-remove-console</code>插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save-dev babel-plugin-transform-remove-console</span><br></pre></td></tr></table></figure><p>在babel.config.js中配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const plugins &#x3D; [];</span><br><span class="line">if([&#39;production&#39;, &#39;prod&#39;].includes(process.env.NODE_ENV)) &#123;  </span><br><span class="line">  plugins.push(&quot;transform-remove-console&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  presets: [[&quot;@vue&#x2F;app&quot;,&#123;&quot;useBuiltIns&quot;: &quot;entry&quot;&#125;]],</span><br><span class="line">  plugins: plugins</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;项目初始化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意：安装前请确保有安装node.js，并且node&amp;gt;=8.9&lt;/p&gt;
&lt;p&gt;全局安装vue　&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue学习" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="vue" scheme="https://liweipeng88.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue-如何封装axios并且统一管理api</title>
    <link href="https://liweipeng88.github.io/2020/01/19/Vue-%E5%A6%82%E4%BD%95%E5%B0%81%E8%A3%85axios%E5%B9%B6%E4%B8%94%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86api/"/>
    <id>https://liweipeng88.github.io/2020/01/19/Vue-%E5%A6%82%E4%BD%95%E5%B0%81%E8%A3%85axios%E5%B9%B6%E4%B8%94%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86api/</id>
    <published>2020-01-18T16:00:00.000Z</published>
    <updated>2020-07-31T00:47:55.163Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">cnpm install  axios </span><br><span class="line">cnpm install vue-axios</span><br></pre></td></tr></table></figure><ul><li><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4></li></ul><p>在main.js中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ajax</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> VueAxios <span class="keyword">from</span> <span class="string">'vue-axios'</span></span><br><span class="line">Vue.use(VueAxios, axios);</span><br></pre></td></tr></table></figure><p>至此，我们可以在组件中使用axios发送get或者post请求了。但是响应处理以及请求拦截等我们还是需要统一封装的，接下来就需要封装axios。</p><ul><li><h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4></li></ul><p>在src目录下面新增request文件夹。然后新增api文件夹，存放我们各个模块的api，新增index.js为各个模块api的统一出口。然后新增http.js封装axios。</p><p>目录结构如下<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xMTgzMzc5LTI2N2Q1NzU3YTBkZmVjOTYuanBn" alt="目录结构"></p><p>index.js 内容如下，index.js的功能就是统一导出各模块api,这样我们就不用在main.js中一个个去引入了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * api导出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> userApi <span class="keyword">from</span> <span class="string">'@/request/api/user'</span>;<span class="comment">//用户管理模块</span></span><br><span class="line"><span class="keyword">import</span> signApi <span class="keyword">from</span> <span class="string">'@/request/api/sign'</span>;<span class="comment">//登录注册模块</span></span><br><span class="line"><span class="keyword">import</span> caseApi <span class="keyword">from</span> <span class="string">'@/request/api/case'</span>;<span class="comment">//病例模块</span></span><br><span class="line"><span class="keyword">import</span> managerApi <span class="keyword">from</span> <span class="string">'@/request/api/manager'</span>;<span class="comment">//管理员模块</span></span><br><span class="line"><span class="keyword">import</span> ringApi <span class="keyword">from</span> <span class="string">'@/request/api/ring'</span>;<span class="comment">//管理员模块</span></span><br><span class="line"><span class="keyword">import</span> structApi <span class="keyword">from</span> <span class="string">'@/request/api/struct'</span>;<span class="comment">//管理员模块</span></span><br><span class="line"><span class="keyword">import</span> scheduleApi <span class="keyword">from</span> <span class="string">'@/request/api/schedule'</span>;<span class="comment">//管理员模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  userApi,</span><br><span class="line">  signApi,</span><br><span class="line">  caseApi,</span><br><span class="line">  managerApi,</span><br><span class="line">  ringApi,</span><br><span class="line">  structApi,</span><br><span class="line">  scheduleApi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以登陆模块为例子，sign.js如下，注意post和get传递参数的区别</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">登录注册模块</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'@/request/http'</span>;</span><br><span class="line"><span class="keyword">import</span> querystring <span class="keyword">from</span> <span class="string">'querystring'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> signApi = &#123;</span><br><span class="line">  <span class="comment">//登录</span></span><br><span class="line">  signin(params)&#123;</span><br><span class="line">    <span class="keyword">return</span> axios.post(<span class="string">'/signin/'</span>,querystring.stringify(params));</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//注册</span></span><br><span class="line">  signup(params)&#123;</span><br><span class="line">    <span class="keyword">return</span> axios.post(<span class="string">'/signup/'</span>,querystring.stringify(params));</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//登出</span></span><br><span class="line">  signout(params)&#123;</span><br><span class="line">    <span class="keyword">return</span> axios.get(<span class="string">'/signout/'</span>,&#123;<span class="attr">params</span>: params&#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//获取验证码</span></span><br><span class="line">  getVerifyCodeImg(params)&#123;</span><br><span class="line">    <span class="keyword">return</span> axios.get(<span class="string">'/getVrifyCode'</span>,&#123;<span class="attr">params</span>: params&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> signApi;</span><br></pre></td></tr></table></figure><p>http.js内容如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装axios</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'../router'</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'../store/index'</span>;</span><br><span class="line"><span class="keyword">import</span> element <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vueobj = <span class="keyword">new</span> Vue();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toSignin = <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>) </span>&#123;</span><br><span class="line">  store.dispatch(<span class="string">"clearUserInfo"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> message = msg ? msg : <span class="string">"session过期，即将前往登录页面"</span>;</span><br><span class="line">  vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: message, <span class="attr">duration</span>: <span class="number">3000</span>, <span class="attr">onClose</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      router.replace(&#123;<span class="attr">path</span>: <span class="string">'/signin'</span>, <span class="attr">query</span>: &#123;<span class="attr">redirect</span>: router.currentRoute.fullPath&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求失败后的错误统一处理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>status 请求失败的状态码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> errorHandle = <span class="function">(<span class="params">status, other</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 状态码判断</span></span><br><span class="line">  <span class="keyword">switch</span> (status) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">400</span>:</span><br><span class="line">      vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"请求参数有误！"</span>, <span class="attr">duration</span>: <span class="number">3000</span>&#125;);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// 401: 未登录状态，跳转登录页</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">      <span class="comment">//vueobj.$message.error(&#123;showClose: true, message: "session过期，即将前往登录页面！", duration: 3000&#125;);</span></span><br><span class="line">      toSignin();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// 403 token过期</span></span><br><span class="line">    <span class="comment">// 清除token并跳转登录页</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">403</span>:</span><br><span class="line">      vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"没有操作权限！"</span>, <span class="attr">duration</span>: <span class="number">3000</span>&#125;);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// 404请求不存在</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">      vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"请求不存在"</span>, <span class="attr">duration</span>: <span class="number">3000</span>&#125;);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">500</span>:</span><br><span class="line">      vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"请求失败，服务器内部错误"</span>, <span class="attr">duration</span>: <span class="number">3000</span>&#125;);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">504</span>:</span><br><span class="line">      vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"与服务器连接失败！"</span>, <span class="attr">duration</span>: <span class="number">3000</span>&#125;);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">console</span>.log(other);</span><br><span class="line">  &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">var</span> instance = axios.create(&#123; <span class="attr">timeout</span>: <span class="number">1000</span> * <span class="number">12</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">instance.interceptors.response.use(</span><br><span class="line">  response =&gt; &#123;</span><br><span class="line">    <span class="comment">// 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据</span></span><br><span class="line">    <span class="comment">// 否则的话抛出错误</span></span><br><span class="line">    <span class="keyword">if</span> (response.status === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">typeof</span> response.data != <span class="string">'undefined'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(response);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(response);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(response);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 服务器状态码不是2开头的的情况</span></span><br><span class="line">  <span class="comment">// 这里可以跟你们的后台开发人员协商好统一的错误状态码</span></span><br><span class="line">  <span class="comment">// 然后根据返回的状态码进行一些操作，例如登录过期提示，错误提示等等</span></span><br><span class="line">  <span class="comment">// 下面列举几个常见的操作，其他需求可自行扩展</span></span><br><span class="line">  error =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; response &#125; = error;</span><br><span class="line">    <span class="keyword">if</span> (response) &#123;</span><br><span class="line">      <span class="comment">// 请求已发出，但是不在2xx的范围</span></span><br><span class="line">      errorHandle(response.status, response.data.message);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(response);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 处理断网的情况</span></span><br><span class="line">      <span class="comment">// eg:请求超时或断网时，更新state的network状态</span></span><br><span class="line">      <span class="comment">// network状态在app.vue中控制着一个全局的断网提示组件的显示隐藏</span></span><br><span class="line">      <span class="comment">// 关于断网组件中的刷新重新获取数据，会在断网组件中说明</span></span><br><span class="line">      <span class="comment">//store.commit('changeNetwork', false);</span></span><br><span class="line">      <span class="comment">//toSignin();</span></span><br><span class="line">      <span class="comment">//vueobj.$message.error(&#123;showClose: true, message: "与服务器连接失败！", duration: 3000&#125;);</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> originalRequest = error.config;</span><br><span class="line">      <span class="keyword">if</span>(error.code == <span class="string">'ECONNABORTED'</span> &amp;&amp; error.message.indexOf(<span class="string">'timeout'</span>)!=<span class="number">-1</span> &amp;&amp; !originalRequest._retry)&#123;</span><br><span class="line">        <span class="comment">// originalRequest._retry = true</span></span><br><span class="line">        <span class="comment">// return axios.request(originalRequest);</span></span><br><span class="line">        vueobj.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"请求超时，请稍后重试！"</span>, <span class="attr">duration</span>: <span class="number">3000</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(response);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> instance;</span><br></pre></td></tr></table></figure><p>在main.js中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">'./request/api/index'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将各模块api挂载在vue实例上</span></span><br><span class="line">Vue.prototype.$api = api</span><br></pre></td></tr></table></figure><p>至此我们已经将axios成功封装，并且将各个模块的api统一管理，如果后台人员修改了api路径，我们不用去组件中一一修改，只需要在api文件下的模块api作修改。接下来就是使用封装好的api了</p><ul><li><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4></li></ul><p>以登陆为例，可通过$api的方式访问我们封装的api了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登陆</span></span><br><span class="line">  signin: <span class="function"><span class="keyword">function</span> (<span class="params">formName</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    that.$refs[formName].validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">        that.loading = <span class="literal">true</span>;</span><br><span class="line">        that.$api.signApi.signin(that.signinForm).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(response.data.code == <span class="string">'201'</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> userinfo = response.data.result;</span><br><span class="line">            userinfo.isSignin = <span class="literal">true</span>;</span><br><span class="line">            that.$store.dispatch(<span class="string">"setUserInfo"</span>, userinfo);</span><br><span class="line"></span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> redirect = that.$route.query.redirect;</span><br><span class="line">              <span class="keyword">if</span>(redirect)&#123;</span><br><span class="line">                that.$router.push(&#123;<span class="attr">path</span>: redirect&#125;);</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>( that.$store.getters.isAdmin) &#123;</span><br><span class="line">                  that.$router.push(&#123;<span class="attr">path</span>: <span class="string">'/manage/user'</span>&#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                  that.$router.push(&#123;<span class="attr">path</span>: <span class="string">'/manage/case'</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              that.loading = <span class="literal">false</span>;</span><br><span class="line">            &#125;,<span class="number">1000</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            that.loading = <span class="literal">false</span>;</span><br><span class="line">            that.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: response.data.message, <span class="attr">duration</span>: <span class="number">2000</span>&#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">          that.loading = <span class="literal">false</span>;</span><br><span class="line">          that.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: response.data.message, <span class="attr">duration</span>: <span class="number">2000</span>&#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        that.$message.error(&#123;<span class="attr">showClose</span>: <span class="literal">true</span>, <span class="attr">message</span>: that.$t(<span class="string">'promotInfo.inputUnvalid'</span>), <span class="attr">duration</span>: <span class="number">2000</span>&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4></li></ul><p>本文讲述了如何封装axios并且统一管理各个模块的api，集中管理和统一封装的方式减少了代码的冗余，提高了系统的健壮性，对实际开发中协作开发也有很大帮助。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Vue/"/>
    
    
    <category term="VUE" scheme="https://liweipeng88.github.io/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>nodejs常用包</title>
    <link href="https://liweipeng88.github.io/2019/12/12/nodejs%E5%B8%B8%E7%94%A8%E5%8C%85/"/>
    <id>https://liweipeng88.github.io/2019/12/12/nodejs%E5%B8%B8%E7%94%A8%E5%8C%85/</id>
    <published>2019-12-11T16:00:00.000Z</published>
    <updated>2020-06-10T08:18:47.683Z</updated>
    
    <content type="html"><![CDATA[<h4 id="vue-lazyload"><a href="#vue-lazyload" class="headerlink" title="vue-lazyload"></a>vue-lazyload</h4><p>图片懒加载，功能很全</p><h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><p>支持 promise 的 http 库</p><h4 id="amfe-flexible"><a href="#amfe-flexible" class="headerlink" title="amfe-flexible"></a>amfe-flexible</h4><p>移动端适配</p><h4 id="vue-meta"><a href="#vue-meta" class="headerlink" title="vue-meta"></a>vue-meta</h4><p>组件中动态修改 head 标签里面的内容</p><h4 id="webpack-bundle-analyzer"><a href="#webpack-bundle-analyzer" class="headerlink" title="webpack-bundle-analyzer"></a>webpack-bundle-analyzer</h4><p>打包完成后显示体积相关信息，可以了解是否重复加载,哪些文件过大等</p><h4 id="html-webpack-include-assets-plugin"><a href="#html-webpack-include-assets-plugin" class="headerlink" title="html-webpack-include-assets-plugin"></a>html-webpack-include-assets-plugin</h4><p>用于添加 js 或 css 文件路径</p><h4 id="vue-awesome-swiper"><a href="#vue-awesome-swiper" class="headerlink" title="vue-awesome-swiper"></a>vue-awesome-swiper</h4><p>移动端轮播图插件</p><h4 id="swiper-animate1-0-3-min-js"><a href="#swiper-animate1-0-3-min-js" class="headerlink" title="swiper.animate1.0.3.min.js"></a>swiper.animate1.0.3.min.js</h4><p>动画过渡插件</p><h4 id="vue-wechat-title"><a href="#vue-wechat-title" class="headerlink" title="vue-wechat-title"></a>vue-wechat-title</h4><p>微信动态设置标题</p><h4 id="uuid"><a href="#uuid" class="headerlink" title="uuid"></a>uuid</h4><p>生成 uid(唯一标识符)</p><h4 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h4><p>md5 加密</p><h4 id="weixin-js-sdk"><a href="#weixin-js-sdk" class="headerlink" title="weixin-js-sdk"></a>weixin-js-sdk</h4><p>微信的 jssdk 库(微信分享)</p><h4 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h4><p>用 nodemon 来代替 node 来启动应用</p><h4 id="rimraf"><a href="#rimraf" class="headerlink" title="rimraf"></a>rimraf</h4><p>以包的形式包装 rm -rf 命令，用来删除文件和文件夹的，不管文件夹是否为空，都可删除</p><h4 id="babel-polyfill"><a href="#babel-polyfill" class="headerlink" title="babel-polyfill"></a>babel-polyfill</h4><p>IE9 不支持 Promise,需安装 babel-polyfill</p><h4 id="qs"><a href="#qs" class="headerlink" title="qs"></a>qs</h4><p>数据格式转换插件，配合 axios 使用</p><h4 id="fastclick"><a href="#fastclick" class="headerlink" title="fastclick"></a>fastclick</h4><p>移动端项目，点击事件会有 300ms 延迟的问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> FastClick <span class="keyword">from</span> <span class="string">'fastclick'</span> <span class="comment">// 解决移动端300毫秒延迟</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">'addEventListener'</span> <span class="keyword">in</span> <span class="built_in">document</span>) &#123;</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(</span><br><span class="line">    <span class="string">'DOMContentLoaded'</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      FastClick.attach(<span class="built_in">document</span>.body)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="literal">false</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fs-extra"><a href="#fs-extra" class="headerlink" title="fs-extra"></a>fs-extra</h4><p>fs-extra 是 fs 的一个扩展</p><h4 id="vue-contextmenu"><a href="#vue-contextmenu" class="headerlink" title="vue-contextmenu"></a>vue-contextmenu</h4><p>右键弹出菜单插件</p><h4 id="vue-touch"><a href="#vue-touch" class="headerlink" title="vue-touch"></a>vue-touch</h4><p>装了 hammer.js 的方法</p><h4 id="vuex-persistedstate"><a href="#vuex-persistedstate" class="headerlink" title="vuex-persistedstate"></a>vuex-persistedstate</h4><p>vuex 数据持久化</p><h4 id="es6-promise"><a href="#es6-promise" class="headerlink" title="es6-promise"></a>es6-promise</h4><p>require(‘es6-promise’).polyfill()</p><h4 id="vconsole"><a href="#vconsole" class="headerlink" title="vconsole"></a>vconsole</h4><p>手机端调试 console</p><h4 id="script-loader"><a href="#script-loader" class="headerlink" title="script-loader"></a>script-loader</h4><p>在全局上下文执行了一次 file.js 文档</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.exec\.js$/</span>,</span><br><span class="line">        use: [<span class="string">'script-loader'</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> exec <span class="keyword">from</span> <span class="string">'script-loader!./script.js'</span></span><br></pre></td></tr></table></figure><h4 id="animate-css"><a href="#animate-css" class="headerlink" title="animate.css"></a>animate.css</h4><p>css 动画库</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// main.js import animate from 'animate.css' Vue.use(animate)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">transition</span></span></span><br><span class="line"><span class="tag">  <span class="attr">enter-active-class</span>=<span class="string">"animated zoomInLeft"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">leave-active-class</span>=<span class="string">"animated zoomOutRight"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="vue-pano"><a href="#vue-pano" class="headerlink" title="vue-pano"></a>vue-pano</h4><p>全景图插件</p><h4 id="better-scroll"><a href="#better-scroll" class="headerlink" title="better-scroll"></a>better-scroll</h4><p>滚动插件</p><h4 id="vue-amap"><a href="#vue-amap" class="headerlink" title="vue-amap"></a>vue-amap</h4><p>高德地图</p><h4 id="vue-ba"><a href="#vue-ba" class="headerlink" title="vue-ba"></a>vue-ba</h4><p>百度统计</p><h4 id="vue-kindedtior"><a href="#vue-kindedtior" class="headerlink" title="vue-kindedtior"></a>vue-kindedtior</h4><p>富文本编辑器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;vue-lazyload&quot;&gt;&lt;a href=&quot;#vue-lazyload&quot; class=&quot;headerlink&quot; title=&quot;vue-lazyload&quot;&gt;&lt;/a&gt;vue-lazyload&lt;/h4&gt;&lt;p&gt;图片懒加载，功能很全&lt;/p&gt;
&lt;h4 id=&quot;axios&quot;&gt;</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="nodejs" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/nodejs/"/>
    
    
    <category term="nodejs" scheme="https://liweipeng88.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>setInterval与setTimeout的区别</title>
    <link href="https://liweipeng88.github.io/2019/11/22/setInterval%E4%B8%8EsetTimeout%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://liweipeng88.github.io/2019/11/22/setInterval%E4%B8%8EsetTimeout%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2019-11-21T16:00:00.000Z</published>
    <updated>2020-08-17T09:14:14.831Z</updated>
    
    <content type="html"><![CDATA[<p>在制作网页动态效果时，一定会遇到某些需求，要求某段程序等待多时时间后再开始执行，就像在我们的生活中一样，待会儿再开始做一件事。在JavaScript中主要通过定时器实现此类需求，本文将对定时器做一个概括，正对setTimeout()做一个详细用法总结。</p><h2 id="一-setInterval与setTimeout的区别"><a href="#一-setInterval与setTimeout的区别" class="headerlink" title="一.setInterval与setTimeout的区别"></a>一.setInterval与setTimeout的区别</h2><p><strong>setInterval</strong></p><p>setInterval()方法可按照指定的周期来调用函数或者计算表达式（以毫秒为单位）</p><p><strong>语法：</strong></p><p>setInterval(函数表达式，毫秒数)；</p><p>setInterval()会不停的调用函数，直到clearInterval()被调用或者窗口被关闭，由 setInterval()返回的ID值可用作clearInterval()方法的参数。</p><p><strong>setTimeout</strong></p><p>setTimeout()方法用于在指定毫秒数后再调用函数或者计算表达式（以毫秒为单位）</p><p><strong>语法：</strong></p><p>setTimeout(函数表达式，毫秒数)；</p><p>setTimeout()只执行函数一次，如果需要多次调用可以使用setInterval(),或者在函数体内再次调用setTimeout()</p><p><strong>区别</strong></p><p>　　通过以上分析可以看出，setTimeout与setInterval的主要区别是:</p><p>　　setTimeout()方法只运行一次，也就是说当达到设定的时间后就出发运行指定的代码，运行完后就结束了，如果还想再次执行同样的函数，可以在函数体内再次调用setTimeout()，可以达到循环调用的效果。</p><p>　　setInterval()是循环执行的，即每达到指定的时间间隔就执行相应的函数或者表达式，是真正的定时器。</p><h2 id="二-setTimeout-的用法"><a href="#二-setTimeout-的用法" class="headerlink" title="二.setTimeout()的用法"></a>二.setTimeout()的用法</h2><p>　　先写个最简单的demo，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> 1 <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"> 2  <span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"> 3      <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> 4            <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"> 5            <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"> <span class="number">6</span>                   setTimeout(<span class="string">"alert('hello')"</span>,<span class="number">2000</span>);</span></span><br><span class="line"> 7            <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> 8      <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> 9     <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">10     <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">11 <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p>页面会在停留2秒之后弹出对话框,注意setTimeout不会自动重复执行！</p><p>当然，setTimeout也可以执行function，还可以不断重复执行！</p><p>你可以看到h1中的文本数字在一秒一秒地递增！</p><p>更加灵活的是，你还可以指定重复执行的次数，如下：</p><p>if判断中的数字，是用来限制重复执行次数的条件。</p><h2 id="三-clearTimeout"><a href="#三-clearTimeout" class="headerlink" title="三.clearTimeout()"></a>三.clearTimeout()</h2><p>要使用clearTimeout()，需要我们设定setTimeout()时， 给予这setTimeout()一个名称, 这名称就是timeoutID ，我们叫停时，就是用这 timeoutID 来叫停</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 1  <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"> 2   <span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"> 3       <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> 4             <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"> 5             <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"> <span class="number">6</span>                   <span class="keyword">var</span> timeId= setTimeout(<span class="string">"alert('hello')"</span>,<span class="number">2000</span>);</span></span><br><span class="line"> 7                    clearTimeout(timeId);</span><br><span class="line"> 8             <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> 9       <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">10      <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">11      <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">12  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原计划1秒后弹出的警示框，被自然叫停了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在制作网页动态效果时，一定会遇到某些需求，要求某段程序等待多时时间后再开始执行，就像在我们的生活中一样，待会儿再开始做一件事。在JavaScript中主要通过定时器实现此类需求，本文将对定时器做一个概括，正对setTimeout()做一个详细用法总结。&lt;/p&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/JS/"/>
    
    
    <category term="JS" scheme="https://liweipeng88.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>开发测试环境的灵活配置</title>
    <link href="https://liweipeng88.github.io/2019/11/16/%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95%E3%80%81%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84%E7%81%B5%E6%B4%BB%E9%85%8D%E7%BD%AE/"/>
    <id>https://liweipeng88.github.io/2019/11/16/%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95%E3%80%81%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84%E7%81%B5%E6%B4%BB%E9%85%8D%E7%BD%AE/</id>
    <published>2019-11-15T16:00:00.000Z</published>
    <updated>2020-06-15T01:11:05.332Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> BASE_URL_DEV = <span class="string">'http://192.168.0.63:8080/sfFinace/'</span></span><br><span class="line"><span class="keyword">const</span> BASE_URL_TEST = <span class="string">'http://192.168.0.63:8080/sfFinace/'</span></span><br><span class="line"><span class="keyword">const</span> BASE_URL_PRO = <span class="string">'http://192.168.0.63:8080/sfFinace/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> MODE_TYPE = &#123;</span><br><span class="line">  DEV : <span class="number">0</span>,</span><br><span class="line">  TEST: <span class="number">1</span>,</span><br><span class="line">  PRO: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> MODE = MODE_TYPE.DEV</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> BASE_URL = [BASE_URL_DEV, BASE_URL_TEST, BASE_URL_PRO][MODE]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/vue/"/>
    
    
    <category term="vue" scheme="https://liweipeng88.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>数据结构转换.js</title>
    <link href="https://liweipeng88.github.io/2019/10/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%AC%E6%8D%A2/"/>
    <id>https://liweipeng88.github.io/2019/10/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%AC%E6%8D%A2/</id>
    <published>2019-10-21T16:00:00.000Z</published>
    <updated>2020-08-17T04:29:03.570Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line">join()</span><br><span class="line">push()和pop()</span><br><span class="line">shift() 和 unshift()</span><br><span class="line">sort()</span><br><span class="line">reverse()</span><br><span class="line">concat()</span><br><span class="line">slice()</span><br><span class="line">splice()</span><br><span class="line">indexOf()和 lastIndexOf() （ES5新增）</span><br><span class="line">forEach() （ES5新增）</span><br><span class="line">map() （ES5新增）</span><br><span class="line">filter() （ES5新增）</span><br><span class="line">every() （ES5新增）</span><br><span class="line">some() （ES5新增）</span><br><span class="line"></span><br><span class="line"><span class="comment">//join，就是把数组转换成字符串，然后给他规定个连接字符，默认的是逗号(  ，)</span></span><br><span class="line"><span class="comment">//书写格式：join(" ")，括号里面写字符串  ("要加引号"),</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.join()); 　　　　<span class="comment">// 1,2,3</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">"-"</span>)); 　　<span class="comment">// 1-2-3</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　<span class="comment">// [1, 2, 3]（原数组不变）</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//push():  把里面的内容添加到数组末尾，并返回修改后的长度。</span></span><br><span class="line"><span class="comment">//书写格式：arr.push(" ")，括号里面写内容  ("字符串要加引号"),</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//pop()：移除数组最后一项，返回移除的那个值，减少数组的length。</span></span><br><span class="line"><span class="comment">//书写格式：arr.pop( )</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"Lily"</span>,<span class="string">"lucy"</span>,<span class="string">"Tom"</span>];</span><br><span class="line"><span class="keyword">var</span> count = arr.push(<span class="string">"Jack"</span>,<span class="string">"Sean"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(count); 　　　　　　　　　　<span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　<span class="comment">// ["Lily", "lucy", "Tom", "Jack", "Sean"]</span></span><br><span class="line"><span class="keyword">var</span> item = arr.pop();</span><br><span class="line"><span class="built_in">console</span>.log(item); 　　　　　　　　　　 <span class="comment">// Sean</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　  <span class="comment">// ["Lily", "lucy", "Tom", "Jack"]</span></span><br><span class="line">shift()：删除原数组第一项，并返回删除元素的值；如果数组为空则返回<span class="literal">undefined</span> 。 </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">unshift:将参数添加到原数组开头，并返回数组的长度 。</span><br><span class="line">书写格式：arr.shift(<span class="string">" "</span>)，括号里面写内容  (<span class="string">"字符串要加引号"</span>),</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"Lily"</span>,<span class="string">"lucy"</span>,<span class="string">"Tom"</span>];</span><br><span class="line"><span class="keyword">var</span> count = arr.unshift(<span class="string">"Jack"</span>,<span class="string">"Sean"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(count); 　　　　　　　　　　　　　　<span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　　<span class="comment">//["Jack", "Sean", "Lily", "lucy", "Tom"]</span></span><br><span class="line"><span class="keyword">var</span> item = arr.shift();</span><br><span class="line"><span class="built_in">console</span>.log(item); 　　　　　　　　　　　　　　<span class="comment">// Jack</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　 <span class="comment">// ["Sean", "Lily", "lucy", "Tom"]</span></span><br><span class="line">sort()：将数组里的项从小到大排序</span><br><span class="line">书写格式：arr.sort( )</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">"a"</span>, <span class="string">"d"</span>, <span class="string">"c"</span>, <span class="string">"b"</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr1.sort()); 　　　　　　　　　　<span class="comment">// ["a", "b", "c", "d"]</span></span><br><span class="line">sort()方法比较的是字符串，没有按照数值的大小对数字进行排序，要实现这一点，就必须使用一个排序函数</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortNumber</span>(<span class="params">a,b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　<span class="keyword">return</span> a - b</span><br><span class="line">&#125;</span><br><span class="line">arr = [<span class="number">13</span>, <span class="number">24</span>, <span class="number">51</span>, <span class="number">3</span>]; <span class="built_in">console</span>.log(arr.sort()); 　　　　　　　　　　<span class="comment">// [13, 24, 3, 51] </span></span><br><span class="line"><span class="built_in">console</span>.log(arr.sort(sortNumber)); 　　　　<span class="comment">// [3, 13, 24, 51](数组被改变)</span></span><br><span class="line">reverse()：反转数组项的顺序。</span><br><span class="line"></span><br><span class="line">　　　   书写格式：arr.reverse( )</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">13</span>, <span class="number">24</span>, <span class="number">51</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.reverse()); 　　　　　　　　<span class="comment">//[3, 51, 24, 13]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　<span class="comment">//[3, 51, 24, 13](原数组改变)</span></span><br><span class="line">concat() ：将参数添加到原数组中。这个方法会先创建当前数组一个副本，然后将接收到的参数添加到这个副本的末尾，最后返回新构建的数组。在没有给 concat()方法传递参数的情况下，它只是复制当前数组并返回副本。</span><br><span class="line"></span><br><span class="line">　　　　书写格式：arr.concat()，括号里面写内容  (<span class="string">"字符串要加引号"</span>),</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>];</span><br><span class="line"><span class="keyword">var</span> arrCopy = arr.concat(<span class="number">9</span>,[<span class="number">11</span>,<span class="number">13</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(arrCopy); 　　　　　　　　　　　　<span class="comment">//[1, 3, 5, 7, 9, 11, 13]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　<span class="comment">// [1, 3, 5, 7](原数组未被修改)</span></span><br><span class="line">slice()：返回从原数组中指定开始下标到结束下标之间的项组成的新数组。slice()方法可以接受一或两个参数，即要返回项的起始和结束位置。在只有一个参数的情况下， slice()方法返回从该参数指定位置开始到当前数组末尾的所有项。如果有两个参数，该方法返回起始和结束位置之间的项——但不包括结束位置的项。</span><br><span class="line"></span><br><span class="line">　　　　书写格式：arr.slice( <span class="number">1</span> , <span class="number">3</span>  )</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>];</span><br><span class="line"><span class="keyword">var</span> arrCopy = arr.slice(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> arrCopy2 = arr.slice(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">var</span> arrCopy3 = arr.slice(<span class="number">1</span>,<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">var</span> arrCopy4 = arr.slice(<span class="number">-4</span>,<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　<span class="comment">//[1, 3, 5, 7, 9, 11](原数组没变)</span></span><br><span class="line"><span class="built_in">console</span>.log(arrCopy); 　　　　　　　　　　　 <span class="comment">//[3, 5, 7, 9, 11]</span></span><br><span class="line"><span class="built_in">console</span>.log(arrCopy2); 　　　　　　　　　　　<span class="comment">//[3, 5, 7]</span></span><br><span class="line"><span class="built_in">console</span>.log(arrCopy3); 　　　　　　　　　　　<span class="comment">//[3, 5, 7]</span></span><br><span class="line"><span class="built_in">console</span>.log(arrCopy4); 　　　　　　　　　　　<span class="comment">//[5, 7, 9]</span></span><br><span class="line">　　arrCopy只设置了一个参数，也就是起始下标为<span class="number">1</span>，所以返回的数组为下标<span class="number">1</span>（包括下标<span class="number">1</span>）开始到数组最后。 </span><br><span class="line"></span><br><span class="line">　　arrCopy2设置了两个参数，返回起始下标（包括<span class="number">1</span>）开始到终止下标（不包括<span class="number">4</span>）的子数组。 </span><br><span class="line"></span><br><span class="line">　　arrCopy3设置了两个参数，终止下标为负数，当出现负数时，将负数加上数组长度的值（<span class="number">6</span>）来替换该位置的数，因此就是从<span class="number">1</span>开始到<span class="number">4</span>（不包括）的子数组。 </span><br><span class="line"></span><br><span class="line">　　arrCopy4中两个参数都是负数，所以都加上数组长度<span class="number">6</span>转换成正数，因此相当于slice(<span class="number">2</span>,<span class="number">5</span>)。</span><br><span class="line"></span><br><span class="line">splice()：删除、插入和替换。</span><br><span class="line"></span><br><span class="line">删除：指定 <span class="number">2</span> 个参数：要删除的第一项的位置和要删除的项数。</span><br><span class="line"></span><br><span class="line"><span class="comment">//书写格式：arr.splice( 1 , 3  )</span></span><br><span class="line"><span class="comment">//插入：可以向指定位置插入任意数量的项，只需提供 3 个参数：起始位置、 0（要删除的项数）和要插入的项。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//书写格式：arr.splice(  2,0,4,6  )</span></span><br><span class="line"><span class="comment">//替换：可以向指定位置插入任意数量的项，且同时删除任意数量的项，只需指定 3 个参数：起始位置、要删除的项数和要插入的任意数量的项。插入的项数不必与删除的项数相等。</span></span><br><span class="line"><span class="comment">//书写格式：arr.splice(  2,0,4,6  )</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>];</span><br><span class="line"><span class="keyword">var</span> arrRemoved = arr.splice(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　　<span class="comment">//[5, 7, 9, 11]</span></span><br><span class="line"><span class="built_in">console</span>.log(arrRemoved); 　　　　　　　　　　　<span class="comment">//[1, 3]</span></span><br><span class="line"><span class="keyword">var</span> arrRemoved2 = arr.splice(<span class="number">2</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">6</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　　<span class="comment">// [5, 7, 4, 6, 9, 11]</span></span><br><span class="line"><span class="built_in">console</span>.log(arrRemoved2); 　　　　　　　　　　<span class="comment">// []</span></span><br><span class="line"><span class="keyword">var</span> arrRemoved3 = arr.splice(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr); 　　　　　　　　　　　　　　　<span class="comment">// [5, 2, 4, 4, 6, 9, 11]</span></span><br><span class="line"><span class="built_in">console</span>.log(arrRemoved3); 　　　　　　　　　　<span class="comment">//[7]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//indexOf()：接收两个参数：要查找的项和（可选的）表示查找起点位置的索引。其中， 从数组的开头（位置 0）开始向后查找。</span></span><br><span class="line"><span class="comment">//书写格式：arr.indexof( 5 )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//lastIndexOf：接收两个参数：要查找的项和（可选的）表示查找起点位置的索引。其中， 从数组的末尾开始向前查找。 </span></span><br><span class="line"><span class="comment">//书写格式：arr.lastIndexOf(  5,4  )</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="number">5</span>)); 　　　　　　<span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.lastIndexOf(<span class="number">5</span>)); 　　　 <span class="comment">//5</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="number">5</span>,<span class="number">2</span>)); 　　　　 <span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.lastIndexOf(<span class="number">5</span>,<span class="number">4</span>)); 　　<span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">"5"</span>)); 　　　　 <span class="comment">//-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//forEach()：对数组进行遍历循环，对数组中的每一项运行给定函数。这个方法没有返回值。参数都是function类型，默认有传参，参数分别为：遍历的数组内容；第对应的数组索引，数组本身。</span></span><br><span class="line"><span class="comment">//书写格式：arr.forEach()</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">x, index, a</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(x + <span class="string">'|'</span> + index + <span class="string">'|'</span> + (a === arr));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 输出为：</span></span><br><span class="line"><span class="comment">// 1|0|true</span></span><br><span class="line"><span class="comment">// 2|1|true</span></span><br><span class="line"><span class="comment">// 3|2|true</span></span><br><span class="line"><span class="comment">// 4|3|true</span></span><br><span class="line"><span class="comment">// 5|4|true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//map()：指“映射”，对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组。</span></span><br><span class="line"><span class="comment">//书写格式：arr.map()</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> item*item;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(arr2); 　　　　　　　　<span class="comment">//[1, 4, 9, 16, 25]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//filter()：“过滤”功能，数组中的每一项运行给定函数，返回满足过滤条件组成的数组。</span></span><br><span class="line"><span class="comment">//书写格式：arr.filter()</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">x, index</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> index % <span class="number">3</span> === <span class="number">0</span> || x &gt;= <span class="number">8</span>;</span><br><span class="line">&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(arr2); 　　　　　　　　<span class="comment">//[1, 4, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//every()：判断数组中每一项都是否满足条件，只有所有项都满足条件，才会返回true。</span></span><br><span class="line"><span class="comment">//书写格式：arr.every()</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; <span class="number">10</span>;</span><br><span class="line">&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(arr2); 　　　　　　　　<span class="comment">//true</span></span><br><span class="line"><span class="keyword">var</span> arr3 = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; <span class="number">3</span>;</span><br><span class="line">&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(arr3); 　　　　　　　　<span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//some()：判断数组中是否存在满足条件的项，只要有一项满足条件，就会返回true。</span></span><br><span class="line"><span class="comment">//书写格式：arr.some()</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; <span class="number">3</span>;</span><br><span class="line">&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(arr2); 　　　　　　　　<span class="comment">//true</span></span><br><span class="line"><span class="keyword">var</span> arr3 = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; <span class="number">1</span>;</span><br><span class="line">&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(arr3); 　　　　　　　　<span class="comment">// false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> protypeidList = []</span><br><span class="line"><span class="comment">//将this.addForm.ptlist数组中的元素最后一个值取到，追加到新的数组protypeidList中</span></span><br><span class="line"><span class="keyword">this</span>.addForm.ptlist.forEach(<span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> id = r[r.length - <span class="number">1</span>]</span><br><span class="line">protypeidList.push(id)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//将ptlist数组遍历后取到值，再为每个值添加属性名后追到新的数组中</span></span><br><span class="line"><span class="keyword">let</span> ptlist = []</span><br><span class="line">protypeidList.map(<span class="function"><span class="params">v</span> =&gt;</span> ptlist.push(&#123;</span><br><span class="line">protypeid: v</span><br><span class="line">&#125;))</span><br><span class="line"><span class="built_in">console</span>.log(ptlist);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="web前端" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JS" scheme="https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/JS/"/>
    
    
    <category term="JS" scheme="https://liweipeng88.github.io/tags/JS/"/>
    
  </entry>
  
</feed>
