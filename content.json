{"meta":{"title":"李伟朋@博客","subtitle":"Today's pay, tomorrow's harvest","description":"Today's pay, tomorrow's harvest","author":"liweipeng","url":"https://liweipeng88.github.io","root":"/"},"pages":[{"title":"yourdiy","date":"2020-06-10T02:01:14.000Z","updated":"2020-06-10T02:01:14.459Z","comments":true,"path":"yourdiy/index-1.html","permalink":"https://liweipeng88.github.io/yourdiy/index-1.html","excerpt":"","text":""},{"title":"yourdiy","date":"2020-06-09T09:21:47.000Z","updated":"2020-06-09T09:21:47.346Z","comments":true,"path":"yourdiy/index.html","permalink":"https://liweipeng88.github.io/yourdiy/index.html","excerpt":"","text":""},{"title":"about","date":"2020-06-09T09:21:22.000Z","updated":"2020-06-10T03:40:07.113Z","comments":true,"path":"about/index.html","permalink":"https://liweipeng88.github.io/about/index.html","excerpt":"","text":"个人介绍1. 基本信息 姓名 电话 毕业院校 学历 邮箱 工作经验 李伟朋 15769294114 西安电子科技大学 大专 liweipeng_it@163.com 3 年以上 2. 求职意向工作地点：西安 期望职位：Web 前端工程师 3. 自我评价技术方面 1.掌握 HTML、CSS、JavaScript、AJAX，jQuery 的 Web 基础开发。 2.熟练使用 Dreamweaver, Visual Studio Code,Sublime Text 等工具开发前端页面 3.熟练使用 Photoshop，sketch 等切图工具进行进行切图。 4.前端框架了解 Bootstrap、AngularJS、jQuery 以及 zepto.js。 5.了解 HTML5 和 CSS3 技术,可以实现基本动画效果。 6.版本管理工具使用过 Git（命令行操作以及 SourceTree 操作）,SVN。 7.熟练掌握 Web 前端开发的流程和模式。 8.有手机端开发开发经验。 业务方面 1.互联网营销或广告系统开发经验 2.汽车电商网络开发相关经验 3.基于 OpenStack 私有云管理平台开发经验 4. 项目经验项目名称： 博客园 1 项目简介：博客园创立于 2004 年 1 月，是一个面向开发者的知识分享社区。自创建以来，博客园一直致力并专注于为开发者打造一个纯净的技术交流社区，推动并帮助开发者通过互联网分享知识，从而让更多开发者从中受益。博客园的使命是帮助开发者用代码改变世界。 我的职责：负责系统样式和交互效果实现，和后台一起前后端接口联调。 5.工作经历2015 年 05 月 2015 年 12 月 上海 B 公司 2013 年 07 月—2015 年 5 月 上海 A 公司 6.教育经历 学校名称 学习时间 学历 专业 西安电子科技大学 2020.9 至 2022.7 大专 软件技术"}],"posts":[{"title":"移动端简单的适配处理","slug":"移动端简单的适配","date":"2029-07-12T16:00:00.000Z","updated":"2020-06-18T07:33:06.855Z","comments":true,"path":"2029/07/13/移动端简单的适配/","link":"","permalink":"https://liweipeng88.github.io/2029/07/13/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%AE%80%E5%8D%95%E7%9A%84%E9%80%82%E9%85%8D/","excerpt":"","text":"123456789101112131415161718192021 (function () &#123; // 在标准 375px 适配下，16px = 1rem; var baseFontSize = 16; var baseWidth = 375; var set = function () &#123; var clientWidth = document.documentElement.clientWidth || window.innerWidth; var rem = 16; if (clientWidth != baseWidth) &#123; rem = Math.floor(clientWidth / baseWidth * baseFontSize); &#125; document.querySelector('html').style.fontSize = rem + 'px'; &#125; set(); window.addEventListener('resize', set); &#125;());&lt;/script&gt; vscode编码的情况下，安装cssrem插件，将基准转换值设为16px，这样就可以正常用rem作为单位开发","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"移动端","slug":"web前端/移动端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"}],"tags":[{"name":"移动端","slug":"移动端","permalink":"https://liweipeng88.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"}],"author":"Li Weipeng"},{"title":"浅谈前端八大UI库","slug":"浅谈前端八大UI库","date":"2020-05-15T16:00:00.000Z","updated":"2020-06-11T01:50:35.356Z","comments":true,"path":"2020/05/16/浅谈前端八大UI库/","link":"","permalink":"https://liweipeng88.github.io/2020/05/16/%E6%B5%85%E8%B0%88%E5%89%8D%E7%AB%AF%E5%85%AB%E5%A4%A7UI%E5%BA%93/","excerpt":"","text":"1. Element-UI element-UI是现在基于Vue的一个非常好用的桌面端UI组件库 支持@vue/cli项目的直接添加，支持按需导入、国际化、支持自定义主题③文档清晰，学习成本低 提供的组件足够使用，UI的风格符合目前大众的普遍审美 如果你想要做一个公司级别的产品，那么Element-Ul基本可以满足需求，但是难免样式、风格会同质化严重 2. Vuetify vuetify是国外团队进行开发的一个基于vue的组件库 支持@vue/cli项目的直接添加，支持按需导入、国际化、提供了定制功能(样式、颜色、主题等等) 文档相对清晰，但是和国人的思维不太一样，导致学习成本相对高一些 提供的组件足够使用，并且提供了v-开头的扩展指令,还有付费专题模块 UI的风格使用的是Google推出的Material Design的设计风格,在国内推广度相对低一些 使用vuetify在UI样式上，会有- -些额外的风险,但是可以避免同质化的问题，比较适合些个人或者需要彰显个性的项目 3. Ant Design Ant Design是阿里巴巴-蚂蚁金服体验技术部所设计的- -个UI库, - -般用于基于React的项目 支持在create-react-app (React 官方脚手架)项目的直接添加， 支持按需导入、国际化、提供了定制主题 文档清晰，学习成本低，提供的组件足够使用，并且提供了精品社区服务 UI的风格符合目前大众的普遍审美 如果你想要做一个公司级别的产品， 那么Ant Design基本可以满足需求，但是难免样式、风格会同质化严重 6. Vant-UI Vant-UI是有赞前端团队所设计的一-个UI库, -般用于基于Vue的移动端项目 支持@vue/cli项目的直接添加，支持按需导入、国际化、提供了定制功能，(样式、颜色、主题等等) 文档清晰，学习成本低，UI的风格以及交互操作可以达到现在的主流标准 提供的组件足够使用，性能不错，并且提供了基于商城业务的成套组件 适用于web app或者基于移动端的网页开发 7. Framework7 Framework7是独立开发者所设计的一一个全功能框架。可以用来构建IOS. Android和桌面应用程序。 本身是一个独立的框架，同时也可以配合vue和react来使用。整体比较重 文档汉化不是很好，具有一定的学习成本。 提供的功能组件、交互视图足够强大,并且也有很多新的概念,性能优秀 UI 的风格以及交互操作可以达到原生APP 95%的体验 适用于没有资深前端开发工程师的公司使用。 8. WEUI weui是微信官方团队开发的一套同微信原生视觉体验一 致的基础样式库。 因为只应对微信内部网页和微信小程序，所以所提供的功能相对简单。 文档稍微乱-些。提供的功能组件有限，主要还是应对场景的问题。 提供的功能组件有限，主要还是应对场景的问题。 适用微信内部网页和微信小程序。","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"UI库","slug":"web前端/UI库","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/UI%E5%BA%93/"}],"tags":[{"name":"UI库","slug":"UI库","permalink":"https://liweipeng88.github.io/tags/UI%E5%BA%93/"}],"author":"Li Weipeng"},{"title":"请求接口的简单封装","slug":"nui-app里面的请求接口简单的封装","date":"2020-03-02T16:00:00.000Z","updated":"2020-06-10T08:23:14.890Z","comments":true,"path":"2020/03/03/nui-app里面的请求接口简单的封装/","link":"","permalink":"https://liweipeng88.github.io/2020/03/03/nui-app%E9%87%8C%E9%9D%A2%E7%9A%84%E8%AF%B7%E6%B1%82%E6%8E%A5%E5%8F%A3%E7%AE%80%E5%8D%95%E7%9A%84%E5%B0%81%E8%A3%85/","excerpt":"","text":"新建一个封装接口的文件12345678910111213141516171819202122232425const BASE_URL &#x3D; &#39;http:&#x2F;&#x2F;localhost:8082&#39;export const myRequest &#x3D; (options) &#x3D;&gt; &#123; return new Promise((resolve, reject) &#x3D;&gt; &#123; nui.request(&#123; url:BASE_URL + options.url, method: options.method || &#39;GET&#39;, data: options.data || &#123;&#125;, success: res &#x3D;&gt;&#123; if(res.data.status !&#x3D;&#x3D; 0)&#123; return nui.showToast(&#123; title:&#39;获取数据失败&#39; &#125;) &#125; resolve(res) &#125;, fail:(err) &#x3D;&gt;&#123; nui.showToast(&#123; title:&#39;请求接口失败&#39; &#125;) reject(err) &#125; &#125;) &#125;)&#125; 挂在到Vue原型上12345678910111213import Vue from &#39;vue&#39;import App from &#39;.&#x2F;App&#39;import &#123; myRequest &#125; from &#39;.&#x2F;util&#x2F;api.js&#39;Vue.prototype.$myRequest &#x3D; myRequestVue.config.productionTip &#x3D; falseApp.mpType &#x3D; &#39;app&#39;const app &#x3D; new Vue(&#123; ...App&#125;)app.$mount() 要请求接口的页面12345678methods:&#123; async getSwipersList()&#123; const res &#x3D; await this.$myRequest(&#123; url:&#39;&#x2F;api&#x2F;getBanner&#39; &#125;) console.log(res) &#125; &#125;","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"Vue学习","slug":"web前端/Vue学习","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"nui-app","slug":"nui-app","permalink":"https://liweipeng88.github.io/tags/nui-app/"}],"author":"Li Weipeng"},{"title":"nodejs常用包","slug":"nodejs常用包","date":"2019-12-11T16:00:00.000Z","updated":"2020-06-10T08:18:47.683Z","comments":true,"path":"2019/12/12/nodejs常用包/","link":"","permalink":"https://liweipeng88.github.io/2019/12/12/nodejs%E5%B8%B8%E7%94%A8%E5%8C%85/","excerpt":"","text":"vue-lazyload图片懒加载，功能很全 axios支持 promise 的 http 库 amfe-flexible移动端适配 vue-meta组件中动态修改 head 标签里面的内容 webpack-bundle-analyzer打包完成后显示体积相关信息，可以了解是否重复加载,哪些文件过大等 html-webpack-include-assets-plugin用于添加 js 或 css 文件路径 vue-awesome-swiper移动端轮播图插件 swiper.animate1.0.3.min.js动画过渡插件 vue-wechat-title微信动态设置标题 uuid生成 uid(唯一标识符) md5md5 加密 weixin-js-sdk微信的 jssdk 库(微信分享) nodemon用 nodemon 来代替 node 来启动应用 rimraf以包的形式包装 rm -rf 命令，用来删除文件和文件夹的，不管文件夹是否为空，都可删除 babel-polyfillIE9 不支持 Promise,需安装 babel-polyfill qs数据格式转换插件，配合 axios 使用 fastclick移动端项目，点击事件会有 300ms 延迟的问题 1234567891011// main.jsimport FastClick from 'fastclick' // 解决移动端300毫秒延迟if ('addEventListener' in document) &#123; document.addEventListener( 'DOMContentLoaded', function() &#123; FastClick.attach(document.body) &#125;, false )&#125; fs-extrafs-extra 是 fs 的一个扩展 vue-contextmenu右键弹出菜单插件 vue-touch装了 hammer.js 的方法 vuex-persistedstatevuex 数据持久化 es6-promiserequire(‘es6-promise’).polyfill() vconsole手机端调试 console script-loader在全局上下文执行了一次 file.js 文档 123456789101112module.exports = &#123; module: &#123; rules: [ &#123; test: /\\.exec\\.js$/, use: ['script-loader'] &#125; ] &#125;&#125;import exec from 'script-loader!./script.js' animate.csscss 动画库 1234567// main.js import animate from 'animate.css' Vue.use(animate)&lt;transition enter-active-class=\"animated zoomInLeft\" leave-active-class=\"animated zoomOutRight\"&gt;&lt;/transition&gt; vue-pano全景图插件 better-scroll滚动插件 vue-amap高德地图 vue-ba百度统计 vue-kindedtior富文本编辑器","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"nodejs","slug":"web前端/nodejs","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://liweipeng88.github.io/tags/nodejs/"}],"author":"Li Weipeng"},{"title":"开发测试环境的灵活配置","slug":"开发、测试、生产环境的灵活配置","date":"2019-11-15T16:00:00.000Z","updated":"2020-06-15T01:11:05.332Z","comments":true,"path":"2019/11/16/开发、测试、生产环境的灵活配置/","link":"","permalink":"https://liweipeng88.github.io/2019/11/16/%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95%E3%80%81%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84%E7%81%B5%E6%B4%BB%E9%85%8D%E7%BD%AE/","excerpt":"","text":"12345678910111213const BASE_URL_DEV = 'http://192.168.0.63:8080/sfFinace/'const BASE_URL_TEST = 'http://192.168.0.63:8080/sfFinace/'const BASE_URL_PRO = 'http://192.168.0.63:8080/sfFinace/'const MODE_TYPE = &#123; DEV : 0, TEST: 1, PRO: 2&#125;const MODE = MODE_TYPE.DEVexport const BASE_URL = [BASE_URL_DEV, BASE_URL_TEST, BASE_URL_PRO][MODE]","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"vue","slug":"web前端/vue","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://liweipeng88.github.io/tags/vue/"}],"author":"Li Weipeng"},{"title":"runtime.js","slug":"微信小程序es7转es5的runtime.js库","date":"2019-09-10T16:00:00.000Z","updated":"2020-06-10T08:25:49.628Z","comments":true,"path":"2019/09/11/微信小程序es7转es5的runtime.js库/","link":"","permalink":"https://liweipeng88.github.io/2019/09/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fes7%E8%BD%ACes5%E7%9A%84runtime.js%E5%BA%93/","excerpt":"","text":"1.在小程序的开发工具中，勾选es6转es5语法 2.下载Facebook的regenerator库中的regenerator/blob/master/packages/regenerator-runtime/runtime.js 3.在小程序目录下新建文件夹lib/runtime/runtime.js，将代码拷贝进去 4.在每个需要使用async语法的页面js文件中，都引入（不能全局引入） runtime.js链接地址 引用方式：importregeneratorRuntimefrom’../../lib/runtime/runtime’ 备注：只引用即可，就可以使用 async 加 await","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"插件","slug":"web前端/插件","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/%E6%8F%92%E4%BB%B6/"}],"tags":[{"name":"小程序","slug":"小程序","permalink":"https://liweipeng88.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}],"author":"Li Weipeng"},{"title":"moment.js的方法总结","slug":"moment.js的方法总结","date":"2018-11-03T16:00:00.000Z","updated":"2020-06-10T08:24:54.146Z","comments":true,"path":"2018/11/04/moment.js的方法总结/","link":"","permalink":"https://liweipeng88.github.io/2018/11/04/moment.js%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/","excerpt":"","text":"总结一个非常实用的日期工具类moment.js，日期获取，格式化等。 都是以前工作中遇到的，我会在使用工具类的时候新建一个js，工作中遇到要显示什么都在这个文件里尝试，所以这个顺序是我工作中遇到然后在js文件中尝试的顺序，可能顺序稍微乱一些，但是大致没有什么问题。 引入moment12345//require 方式var moment=require('moment');//import 方式import moment from 'moment'; 设定moment区域为中国123456//require 方式require('moment/locale/zh-cn')moment.locale('zh-cn'); //import 方式import 'moment/locale/zh-cn'moment.locale('zh-cn'); 格式化时间类型1.取当天时间，以YYYY年MM月DD日形式显示 1var now=moment().format(\"YYYY年MM月DD日\"); 2.任意时间戳格式化，以YYYY-MM-DD HH:mm:ss形式显示 1var t1=moment(1411641720000).format('YYYY-MM-DD HH:mm:ss'); 获取前一天日期，格式以YYYY-MM-DD形式显示1var t11=moment().day(0).format('YYYY-MM-DD'); 获取本周五日期，格式以YYYY-MM-DD形式显示1var t12=moment().weekday(5).format('YYYY-MM-DD'); 获取上周五日期，格式以YYYY-MM-DD形式显示1var t13=moment().weekday(-3).format('YYYY-MM-DD'); 可以简单理解为上周倒数第几天，上周倒数第三天就是上周五了，和当天日期无关 获取当前年份、月份、日期123var t14=moment().year()var t15=moment().month()//此处月份从0开始，当前月要+1var t16=moment().date(); 注意这个地方，日期不是.day()/days() 结合t14，t15，t16就可以输出你想要的任何和当前日期、月份相关的日期 例如：我想获取去年今天的完整日期，如：今天是2018-7-23，我要输出的是2017-7-23 1console.log(`$&#123;t14-1&#125;-$&#123;t15+1&#125;-$&#123;t16&#125;`) 当然这不是获取去年今天日期最好的办法，但你可以拼出很多你想要的组合，下面会介绍更好的获取去年今日的方法。 获取上个月今天的日期，格式以YYYY-MM-DD显示1var t18=moment().subtract(1, 'months').format('YYYY-MM-DD'); 获取上个月日期，格式以YYYY-MM显示1var t19=moment().subtract(1, 'months').format('YYYY-MM') 获取前一天日期，格式以YYYY-MM-DD显示1var t20 = moment().subtract(1, 'days').format('YYYY-MM-DD'); 获取去年今天的日期，格式以YYYY-MM-DD显示，即简便的获取去年今天日期的方法1var t21= moment().subtract(1, 'year').format('YYYY-MM-DD'); 获取两个小时之后的时间1var t22=moment().add(2,'hours').format('YYYY-MM-DD HH:mm:ss'); 这个的应用是获取时间戳过期时间 比较也很简单，只要获取当前时间，一样的format用&gt;&lt;=号比较就可以了 获取五天前的日期例如:今天2018-7-23，获取到的时间是2018-7-18 1var t23=moment().subtract(5, 'days').format('YYYY-MM-DD');","categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"插件","slug":"web前端/插件","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/%E6%8F%92%E4%BB%B6/"}],"tags":[{"name":"常用插件","slug":"常用插件","permalink":"https://liweipeng88.github.io/tags/%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"}],"author":"Li Weipeng"}],"categories":[{"name":"web前端","slug":"web前端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"移动端","slug":"web前端/移动端","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"},{"name":"UI库","slug":"web前端/UI库","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/UI%E5%BA%93/"},{"name":"Vue学习","slug":"web前端/Vue学习","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"},{"name":"nodejs","slug":"web前端/nodejs","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/nodejs/"},{"name":"vue","slug":"web前端/vue","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/vue/"},{"name":"插件","slug":"web前端/插件","permalink":"https://liweipeng88.github.io/categories/web%E5%89%8D%E7%AB%AF/%E6%8F%92%E4%BB%B6/"}],"tags":[{"name":"移动端","slug":"移动端","permalink":"https://liweipeng88.github.io/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"},{"name":"UI库","slug":"UI库","permalink":"https://liweipeng88.github.io/tags/UI%E5%BA%93/"},{"name":"nui-app","slug":"nui-app","permalink":"https://liweipeng88.github.io/tags/nui-app/"},{"name":"nodejs","slug":"nodejs","permalink":"https://liweipeng88.github.io/tags/nodejs/"},{"name":"vue","slug":"vue","permalink":"https://liweipeng88.github.io/tags/vue/"},{"name":"小程序","slug":"小程序","permalink":"https://liweipeng88.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"常用插件","slug":"常用插件","permalink":"https://liweipeng88.github.io/tags/%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"}]}